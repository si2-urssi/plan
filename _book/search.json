[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"public document draft final URSSI plan. Empty sections internal review posted .","code":""},{"path":"intro.html","id":"intro","chapter":"1 Introduction","heading":"1 Introduction","text":"Software pervades parts modern scientific research, including data analysis inference well computational science. One hard pressed find area research impacted software. Recent surveys US UK show 90-95% researchers rely research software, 63-70% continue work software stop functioning (Hettrick et al. 2014). Much software developed researchers researchers, contemporary scientific process demands development new methods tandem demands new discoveries fields. However, despite importance, large proportion research software developed ad hoc manner, little regard high standards characteristic research activities. result, research software ecosystem fragile source numerous problems plague modern computational science (Carver et al. 2018).Researchers today intense pressure demonstrate expertise chosen domains also trying maintain working current knowledge digital skills software engineering.\ncombination unsustainable researchers. little bandwidth keep best practices sufficient recognition software development scholarly activity, much research software developed manner makes wholly unsustainable, despite obvious role plays modern research, multitude reasons. Academic promotion tenure, even institutions liberal policies, consider peer-reviewed publications primary metric progress disciplines. Even impact software made clear, usually considered traditional scholarly activity, making challenging get credit (Organisation Economic Cooperation Development 2019). shortage horror stories academics built demonstrably impactful software, denied tenure.\nEven outside tenure track, academic jobs offer meaningful career progression software work. second reason, strongly correlated lack recognition software, lack training opportunities. Many research software engineers self taught. Others learn programming bootcamps workshops rather traditional academic coursework. Overworked academics unable take advantage opportunities therefore develop software using outdated practices. Lastly, even software recognized impact, funding agencies rarely fund maintenance ongoing development work, leading reinvention rather reuse (https://chanzuckerberg.com/rfa/essential-open-source-software--science/)spent last two years engaged series activities designed gain \ndeeper understanding research software unsustainable can done\n. numerous discussions diverse groups researchers, \nbrainstormed challenges solutions highly scalable impact large swath\nresearchers. plan discusses problem chapter, describes activities\n(Chapter 2),\noutlines high-level plans methods (Chapter 3),\ndiscusses detailed plans following five chapters\n(community & outreach activities Chapter 4,\neducation & training activities Chapter 5,\nincubator activities Chapter 6,\npolicy activities Chapter 7,\n\nmangement & coordination Chapter 8),\ntalks budget (Chapter 9),\ndiscusses metrics & evaluation (Chapter 10),\nconcludes (Chapter 11).\ncomplete document justification plan new institute work\nmultiple areas improve research software careers produce ,\nend goal performing better research.","code":""},{"path":"intro.html","id":"nature-of-the-problem","chapter":"1 Introduction","heading":"1.1 Nature of the problem","text":"One hard pressed name field scientific endeavor substantially transformed software. physics psychology, software transformed way create, acquire, process, model, draw insights data. Much transformation come increasing availability open source tools, many helped improve rigor, quality, reproducibility research. development research software often considered scholarship, making difficult academics seek funding find meaningful career paths, especially research software activities make significant part contributions. people often lead double lives, working tirelessly meet traditional responsibilities academic life, developing open source tools enable modern research. able break problem following four areas:Research software sustainably developed: many fields research software developed academics academics. people spent much careers developing deep domain expertise, developing deep software expertise, software often get level care aspects research enterprise\n(https://www.nature.com/articles/s41592-019-0686-2). Therefore quality software highly variable, making hard sustain. Mounting technical debt often makes easier develop software scratch use existing tools. Versions software used papers exceedingly hard track , making challenging reproduce research findings reuse research software. Collberg colleagues (Collberg et al. 2013; Collberg, Proebsting, Warren 2014) decided measure extent problem precisely, investigated availability code data well extent code actually run reasonable effort. results dramatic: 515 (613) potentially reproducible papers, across applied computational research, authors managed ultimately run 102 (less 20%). low numbers count authors’ success running code, actually validating results.Lack career opportunities: Software often count career advancement (e.g.,promotion tenure) academia, making invisible scholarly contribution. Research software often cited (31-43%), even highly ranked journals (Howison Bullard 2016). Besides negative impact career trajectories, lack visibility means incentives produce sustainable, widely shared, collaboratively developed software lacking. outside traineeships tenure track positions, Research Software Engineer (RSE) movement begun creating new class academic positions explicitly value software work, positions common universities United States.Lack training opportunities: NSF PIs BIO directorate asked biggest challenges leveraging vast amounts data currently available, lack training listed single biggest challenge (Barone, Williams, Micklos 2017). Although training deficit describes ability use existing data science software, skills needed develop harder come . programs like Carpentries handful university courses offer training analyzing data, train researchers modern open source software development (Hettrick 2014; Hettrick et al. 2014; Nangia Katz 2017). gap remains filled.Lack diversity research software: Open source communities struggle gain participation women broadly underrepresented groups. Less 10% contributors open source communities identify female (Lee Carver 2019) compared approximately 25% overall computer science field (National Science Foundation 2017; Vasilescu, Capiluppi, Serebrenik 2012). Cultivating diversity perspectives, ﬁelds, backgrounds important growing robust research software community. need understand sources diversity problems work improve current state (Daniel, Agarwal, Stewart 2013). Contrary initial belief open source communities, ability contribute project anonymously solve gender diversity issue (Nafus 2012) least partially project members able determine gender contributors, even use pseudonyms (Vasilescu et al. 2015). addition, large percentage female contributors either subject witnessed gender-based discrimination (Powell, Hunsinger, Medlin 2010) discouraged participating projects aggressive nature discourse lack female role\nmodels (Reagle 2012).\nURSSI survey, described detail later, found evidence lack diversity. asking survey respondents self-identify gender, 25% identified female.\n164 US respondents 2018 International RSE Survey (Philippe et al. 2019) reported 82% male, 14% female, 4% preferred say. also reported 77% white, 11% Asian, 6% Hispanic/Latino, 5% , 2% Black. Additionally, 3% reported disability.","code":""},{"path":"intro.html","id":"valuing-producers-of-research-software","chapter":"1 Introduction","heading":"1.2 Valuing producers of research software","text":"Despite numerous barriers prevent people receiving recognition career success research software work, successfully overcome . exemplar regard Dr. Fernando Perez, currently associate professor statistics University California, Berkeley. much career worked traditional untenured position research scientist neuroscience computational research, collaboratively developing open source notebook interface Python programming language side project. time, software work started much impact traditional scientific contributions. current evolution group’s efforts, Jupyter ecosystem (https://jupyter.org/), considered many “universally accepted scientific community” won team awards Association Computer Machinery award software.\nrecently, magnitude software contributions far reaching impact \neffort (https://www.theatlantic.com/science/archive/2017/06/gravitational-waves-black-holes/528807/,\nhttps://www.theatlantic.com/science/archive/2018/04/-scientific-paper--obsolete/556676/)earned fast-tracked tenured position University California, Berkeley. type unconventional success traditional public university sign recognition software work scholarship changing.result Dr. Perez’ story promising, difficult achieve. academics produced work similar greater magnitude past weren’t fortunate. Travis Oliphant, example, served assistant professor Electrical Computer Engineering Brigham Young University early 2000s. Among accomplishments time, credited primary creator NumPy, Python library numerical arrays foundation modern data science tools, one early contributors SciPy, widely used library scientific Python. contributions deemed insufficient tenure. Kirk McKusick, professor EECS Berkeley denied tenure early 1990s primary work BSD Software Project, went become foundation modern internet. [TODO: examples welcome appreciated. women/people color experienced similar situations can highlight ?]","code":""},{"path":"intro.html","id":"why-we-ran-this-conceptualization","chapter":"1 Introduction","heading":"1.3 Why we ran this conceptualization","text":"comes surprise researchers software undervalued academia. However, substantive evidence supporting claim scattered mostly anecdotal, making hard build convincing case research community stakeholders need care . 2017 submitted proposal National Science Foundation’s Software Infrastructure Sustained Innovation (S2I2) program gather evidence, identify unique challenges already addressed, formulate plan institute implement solutions. proposal funded December 2018, allowing us engage various activities following 24 months. Despite awareness issues existence similar conceptualizations (albeit domain-centric ones), core challenges around sustainability (people/software/practices), recognition credit, training/workforce development remain poorly understood poorly addressed.used wide range approaches understand core social technical challenges developing sustainable research software. approaches include extensive survey, -person unconferences, general topic focused, pilot training event, series ethnographic studies. mapped current state software related challenges extensive survey targeting researchers across country. also invited participants workshops across country share critical challenges brainstorm solutions small groups. dug deeper couple core issues arose repeatedly (credit incubators) organizing two focused workshops tackle (credit incubators). report captures summary survey, workshops, studies describes core set activities define work future US Research Software Institute.","code":""},{"path":"intro.html","id":"what-we-plan-to-do-and-why","chapter":"1 Introduction","heading":"1.4 What we plan to do and why","text":"conceptualization phase survey, workshops, ethnographic studies elucidated need community different components potential implementation URSSI. identified four areas supporting research software community - accelerate science diverse research domains well software engineering research area right. activities contributes desired impacts described Section 3.4.Incubator: Sustainability research software many aspects beyond good software engineering practices overlap diverse areas expertise. areas include technology advice, project management, business planning, usability advice, license management, etc. incubator service area focus providing projects experts consultancy agreement support project different stages life cycle – spinning project first results uptake software planning sustainability funding ends.Incubator: Sustainability research software many aspects beyond good software engineering practices overlap diverse areas expertise. areas include technology advice, project management, business planning, usability advice, license management, etc. incubator service area focus providing projects experts consultancy agreement support project different stages life cycle – spinning project first results uptake software planning sustainability funding ends.Education & Training: Many universities offer curricula conceptual software engineering lack practical training meet community needs go depth different technologies. University courses offered computer science departments also often impractical domain researchers. survey showed need choose formats timeframes suitable people role Research Software Engineers (RSEs) busy domain scientists lack formal informal training. Carpentries RDA-CoDATA summer school, example, excellent job teaching basic programming computational & data analytic methods researchers peer--peer model, mostly 2-day courses, URSSI massive opportunity fill gap teaching -depth software engineering, software project management, community development practices longer engagements, 5-day summer- /winter-school. URSSI strive collaborate topics Carpentries existing software sustainability institutes, Science Gateways Community Institute Molecular Sciences Software Institute, rather replicate effort, identify training opportunities overall research software landscape currently missing.Education & Training: Many universities offer curricula conceptual software engineering lack practical training meet community needs go depth different technologies. University courses offered computer science departments also often impractical domain researchers. survey showed need choose formats timeframes suitable people role Research Software Engineers (RSEs) busy domain scientists lack formal informal training. Carpentries RDA-CoDATA summer school, example, excellent job teaching basic programming computational & data analytic methods researchers peer--peer model, mostly 2-day courses, URSSI massive opportunity fill gap teaching -depth software engineering, software project management, community development practices longer engagements, 5-day summer- /winter-school. URSSI strive collaborate topics Carpentries existing software sustainability institutes, Science Gateways Community Institute Molecular Sciences Software Institute, rather replicate effort, identify training opportunities overall research software landscape currently missing.Policy: Policy important area improve sustainability research software. Policies include campaigns well guidelines citation software, templates job positions, good software engineering practices well bad software engineering practices counterexamples. already collaborating UK SSI several years plan expand collaborations initiatives/projects US-RSE find common ground international level considering specific situation US.Policy: Policy important area improve sustainability research software. Policies include campaigns well guidelines citation software, templates job positions, good software engineering practices well bad software engineering practices counterexamples. already collaborating UK SSI several years plan expand collaborations initiatives/projects US-RSE find common ground international level considering specific situation US.Community & Outreach: Many researchers developers role RSE work silos Community & Outreach area URSSI connect peers provide access beneficial material, resources, contacts improve situation. RSE community already achieved successes simply working together. number chapters gone 1 UK university 2013 28 chapters 2020. URSSI potential capture momentum. Community engagement include scalable communication website, blogs newsletters, two-way communications discussions webinars online discussion forums well face--face meetings form workshops. addition, area include fellows program support work done community members benefits URSSI activities.Community & Outreach: Many researchers developers role RSE work silos Community & Outreach area URSSI connect peers provide access beneficial material, resources, contacts improve situation. RSE community already achieved successes simply working together. number chapters gone 1 UK university 2013 28 chapters 2020. URSSI potential capture momentum. Community engagement include scalable communication website, blogs newsletters, two-way communications discussions webinars online discussion forums well face--face meetings form workshops. addition, area include fellows program support work done community members benefits URSSI activities.Building different areas URSSI formalize URSSI’s informal position focal point overall community software developers well set disciplinary communities. URSSI help accelerate science needs research software improve career paths develop maintain , including RSEs.","code":""},{"path":"chapter2.html","id":"chapter2","chapter":"2 URSSI Conceptualization","heading":"2 URSSI Conceptualization","text":"purpose conceptualization project create roadmap US\nResearch Software Sustainability Institute (URSSI). roadmap \ninformed responsive community potential stakeholders, including\nresearchers, software developers users, funders, program / product managers.\nengage diverse group people institutions completed \nresearch described section including series workshops, community outreach \ncommunication, survey, set ethnographic studies, pilot Winter School\nearly-career researchers. conclusion section offer \nsummary challenges identified, collectively, across URSSI\nconceptualization activities role believe URSSI play \naddressing challenges.","code":""},{"path":"chapter2.html","id":"workshops","chapter":"2 URSSI Conceptualization","heading":"2.1 Workshops","text":"Community wide workshops: 2018 held two community workshops \nURSSI stakeholders Berkeley (April) Chicago (October). invited participants\nbased ability represent diverse roles, institutions, \nperspectives research software. general goal two community workshops\ndetermine topics diverse group stakeholders consider \nwell-understood, topics still uncertainty need guidance, work\nremains done supporting sustainable research software. URSSI PIs\nfacilitated broad discussions participated small group breakout\ndiscussions. Additionally, participants workshop gave presentations\n-going research software activities.Thematic Workshops: Participants first community workshop identified\ntwo topics worthy focused discussion community input.\norganized following workshops better understand topics:Metrics, Credit Citation Workshop, held Santa Barbara,\nCalifornia January 2019, focused reseach software metrics, citation,\nimpact evaluatin. 23 participants strong expertise \nvarious workshop themes, including PIs CodeMeta project, Zenodo,\nsoftware credit initiatives SourceCred.Metrics, Credit Citation Workshop, held Santa Barbara,\nCalifornia January 2019, focused reseach software metrics, citation,\nimpact evaluatin. 23 participants strong expertise \nvarious workshop themes, including PIs CodeMeta project, Zenodo,\nsoftware credit initiatives SourceCred.Research Incubators Workshop, held College Park, Maryland\nFebruary 2019, focused methods incubating new existing research projects.\n20 participants strong expertise \nresearch software project development, including program officers \nvarious government agencies, open-source research software developers,\norganizational scholars studied research software processes.Research Incubators Workshop, held College Park, Maryland\nFebruary 2019, focused methods incubating new existing research projects.\n20 participants strong expertise \nresearch software project development, including program officers \nvarious government agencies, open-source research software developers,\norganizational scholars studied research software processes.URSSI Design Workshop: April 2019 members Senior Personnel\nAdvisory Committees participated workshop Chicago, IL. PIs\npresented preliminary results research (ethnographies survey)\nwell lessons learned four previously held URSSI workshops.","code":""},{"path":"chapter2.html","id":"website-newsletter-blog","chapter":"2 URSSI Conceptualization","heading":"2.2 Website / Newsletter/ Blog","text":"One major goals conceptualization project build awareness\nneed institute, publicize activities, increase overall community interest.\nachieve goal, used website, nine newsletters,\n36 blog posts, seires public talks webinars given\nPIs others. sent newsletters URSSI email list, consists\nworkshop attendees interested members community.\nalso publicized newsletter blog posts via URSSI twitter account,\n500 followers.","code":""},{"path":"chapter2.html","id":"survey","chapter":"2 URSSI Conceptualization","heading":"2.3 Survey","text":"developed disseminated survey compliment workshop participation.\nprimary goal survey gather opinions, preferences, \nself-reported activities research software community regarding\ndevelopment practices, development tools, training, funding/institutional\nsupport, career paths, credit software work, diversity/inclusion.\ntopics, asked small number general questions \nallowed participants self-select answer detailed questions\narea particular interest. distributed survey PIs \ncurrently funded NSF NIH projects relevant mailing lists. \nsurvey closed May 2019 receiving approximately 1200 responses.results survey highlighted areas URSSI play \nkey role advancing sustainability research software United States.mismatch respondents wanted allocate \ntime actual allocation time. result provides opportunity\nURSSI work developers teams help focus efforts\ntasks relevant.mismatch respondents wanted allocate \ntime actual allocation time. result provides opportunity\nURSSI work developers teams help focus efforts\ntasks relevant.aspects software development process respondents viewed \ndifficult tended people-related\nactivities rather technical activities. result suggests URSSI\nsupport teams developers providing training /\nresources related human factors software development process.aspects software development process respondents viewed \ndifficult tended people-related\nactivities rather technical activities. result suggests URSSI\nsupport teams developers providing training /\nresources related human factors software development process.Respondents indicated use number software development practices.\nHowever, one key practice underutilized peer code review. URSSI\ncan provide training peer code review work teams ensure \ninfrastructure place appropriately support activity \nresearch software space.Respondents indicated use number software development practices.\nHowever, one key practice underutilized peer code review. URSSI\ncan provide training peer code review work teams ensure \ninfrastructure place appropriately support activity \nresearch software space.respondents indicated software development practices including\nrequirements, design, maintenance, documentation \nwell-supported tools.respondents indicated software development practices including\nrequirements, design, maintenance, documentation \nwell-supported tools.terms version control, still sizable percentage \npeople use methods like copying files another location \nzip file backups version control. result suggests URSSI\nprovide additional training tools help teams use modern\nversion control systems.terms version control, still sizable percentage \npeople use methods like copying files another location \nzip file backups version control. result suggests URSSI\nprovide additional training tools help teams use modern\nversion control systems.Many items relate training, lack thereof. \nsurvey results suggest large percentage respondents received\ntraining software development. respondents indicated \nsufficient opportunities training, suggested \nsufficient time training. URSSI help providing training\ndifferent formats work better demands research\nsoftware developers’ environments.Many items relate training, lack thereof. \nsurvey results suggest large percentage respondents received\ntraining software development. respondents indicated \nsufficient opportunities training, suggested \nsufficient time training. URSSI help providing training\ndifferent formats work better demands research\nsoftware developers’ environments.Many respondents also found level support, terms funding,\ninadequate successful. URSSI help advocating \nnational funding level well University level increased\nfunding important research software development activities.Many respondents also found level support, terms funding,\ninadequate successful. URSSI help advocating \nnational funding level well University level increased\nfunding important research software development activities.Respondents also indicated software contributions \nsignificantly valued performance reviews. URSSI help developing\nadvocating policies help research software developers get\nadequate recognition work.Respondents also indicated software contributions \nsignificantly valued performance reviews. URSSI help developing\nadvocating policies help research software developers get\nadequate recognition work.projects lack formal diversity plan. URSSI help providing\ntemplate diversity plans support developing\nappropriate plans individual projects.projects lack formal diversity plan. URSSI help providing\ntemplate diversity plans support developing\nappropriate plans individual projects.","code":""},{"path":"chapter2.html","id":"ethnography","chapter":"2 URSSI Conceptualization","heading":"2.4 Ethnography","text":"gain deeper understanding practices experiences researchers\nactively engaged software development, undertaken series \nethnographic studies. studies focused software projects varying\nsize complexity fields hydrology, astronomy, biochemistry.\nUsing observations, semi-structured interviews, \nseries archival documents, produced case studies , time, \nprojects overcame challenges recruiting contributors, building governance\nmodel, seeking funding, sharing credit sustaining software project \ndemonstrable impact community researchers.developed two studies, Astropy Rosetta Commons, full case\nstudies. projects face unique sustainability challenges solved\nsomewhat differently. main findings work novel\nsense surprise anyone familiar challenges sustaining\nresearch software, value work comparing two cases. better\nunderstanding common approaches overcoming sustainability challenges, believe\nvaluable opportunity abstract approaches models success\nresearch software projects domains can modify tailor.\nfollowing brief summary findings two case studies.Points comparison:Distributed work coordination: Key success Astropy Rosetta\nCommons coordination remote collaborative work. Astropy mirrors Python’s\ncore development team structuring contributor guidelines supporting\ndesignated maintainers. Rosetta Commons differs substantially project\nemploys four full-time infrastructure maintainers. offloading \nmaintenance responsibilities frees contributors (distributed labs throughout\nUSA) focus conducting research driving innovations extend\nRosetta’s key functionality.Distributed work coordination: Key success Astropy Rosetta\nCommons coordination remote collaborative work. Astropy mirrors Python’s\ncore development team structuring contributor guidelines supporting\ndesignated maintainers. Rosetta Commons differs substantially project\nemploys four full-time infrastructure maintainers. offloading \nmaintenance responsibilities frees contributors (distributed labs throughout\nUSA) focus conducting research driving innovations extend\nRosetta’s key functionality.Funding: Astropy fiscally sponsored NumFocus, depends upon grant\nfunding variety sources sustain collective work. recent\ngrant Gordon Betty Moore Foundation, “Sustaining Growing \nAstropy Project,” focused exclusively maintenance governance \nproject’s long-term viability practicing astronomers. Rosetta Commons\ncombines licensing grant funding sustain work. Licenses \ncommercial use NIH infrastructure maintenance grant continuously\nsupported project since 2005.Funding: Astropy fiscally sponsored NumFocus, depends upon grant\nfunding variety sources sustain collective work. recent\ngrant Gordon Betty Moore Foundation, “Sustaining Growing \nAstropy Project,” focused exclusively maintenance governance \nproject’s long-term viability practicing astronomers. Rosetta Commons\ncombines licensing grant funding sustain work. Licenses \ncommercial use NIH infrastructure maintenance grant continuously\nsupported project since 2005.Credit: projects number papers published \ndevelopment. Astropy suggests two publications cite acknowledging\nuse software (Robitaille et al. 2013; Price-Whelan et al. 2018). two\npublications, combined, 3000 citations. Rosetta Commons,\nmany versions, methods, language specific implementations,\ncanonical citation. Interviews contributors Rosetta noted\nlack canonical citation causes confusion authors rushing towards publication.\nMany researchers sought centralized source acknowledge.\nDespite lack canonical citation, two papers describing Rosetta \nuse predicting protein structures , combined, 4300\ncitations (Rohl et al. 2004; Salmena et al. 2011).Credit: projects number papers published \ndevelopment. Astropy suggests two publications cite acknowledging\nuse software (Robitaille et al. 2013; Price-Whelan et al. 2018). two\npublications, combined, 3000 citations. Rosetta Commons,\nmany versions, methods, language specific implementations,\ncanonical citation. Interviews contributors Rosetta noted\nlack canonical citation causes confusion authors rushing towards publication.\nMany researchers sought centralized source acknowledge.\nDespite lack canonical citation, two papers describing Rosetta \nuse predicting protein structures , combined, 4300\ncitations (Rohl et al. 2004; Salmena et al. 2011).observe differences two projects seem marginal first\nglance, upon analysis important practical consequences\nsoftware development activities. example, two substantial\ndifferences projects consequences long-term sustainability\nproject:Astropy, following open model contribution, focuses time \nattention clearly documenting making contributor guidelines\naccessible research software engineers. maintenance team\ntherefore focuses effort ensuring contributors supported\nsimultaneously keeping various packages date available\ncommunity depends upon code research. approach \npartially result software ecosystem broadly useful \ndiscipline (Astronomy), compared Rosetta Commons, focused \nspecific analytic tasks within subfield biological engineering\n(Macromolecular modelling).Astropy, following open model contribution, focuses time \nattention clearly documenting making contributor guidelines\naccessible research software engineers. maintenance team\ntherefore focuses effort ensuring contributors supported\nsimultaneously keeping various packages date available\ncommunity depends upon code research. approach \npartially result software ecosystem broadly useful \ndiscipline (Astronomy), compared Rosetta Commons, focused \nspecific analytic tasks within subfield biological engineering\n(Macromolecular modelling).Continuous annual grant funding licensing fees allow Rosetta \ncentralize infrastructure tasks core team whose sole job \nmaintenance. approach turn encourages innovation expansion feature\nsets labs focus solely producing new research insights.\nAstropy , time, centralized maintenance project’s software\ndevelopment maintenance. recently, maintenance \nvolunteer activity. Shifting time, attention, energy towards organizing\nopen-source model development impacts career trajectories \npracticing astronomers contributes fragile ecosystem astronomy.Continuous annual grant funding licensing fees allow Rosetta \ncentralize infrastructure tasks core team whose sole job \nmaintenance. approach turn encourages innovation expansion feature\nsets labs focus solely producing new research insights.\nAstropy , time, centralized maintenance project’s software\ndevelopment maintenance. recently, maintenance \nvolunteer activity. Shifting time, attention, energy towards organizing\nopen-source model development impacts career trajectories \npracticing astronomers contributes fragile ecosystem astronomy.recognize software sustainability just financial support,\ncase studies make clear economic realities \nmaintaining contributing software development important downstream\nimpacts shape innovation engagement. URSSI conceptualization\nstudied challenges can practically overcome.","code":""},{"path":"chapter2.html","id":"chapter2-WinterSchool","chapter":"2 URSSI Conceptualization","heading":"2.5 Winter School","text":"late December 2019 ran \nfirst ever URSSI school research software engineering. began accepting\napplications July received overwhelming response call \napplications. 30 participant slots available, received 169\napplications, meaning challenging time selecting participants\nturn away large number interested researchers. \nselection committee used multiple criteria evaluate select participants,\nsuccessful applicants already experience Python programming, Git,\nUnix skills, necessary benefit workshop. goal\nrepeat material covered bootcamps Software Carpentry\nstyle workshops, focus research software engineering skills \nformally taught setting. skills include best practices\npackaging code software, testing, collaborative software development,\ncode review, related topics licensing archiving. school\nlasted 2.5 days.Based demand described , experience made evident strong\nneed skills covered school. overall feedback \nschool also positive (). key lessons \npilot impact design Summer School part URSSI : 1) \nschool needs longer allow discussion time focused time\nstudents work code, applying lessons lectures;\n2) presence additional helpers outside primary instructors \nquite beneficial help answer specific questions students.example quotes Winter School feedback form include:“really can’t say enough good things super empowering workshop!\namazing job identifying things didn’t know didn’t know,\nteaching level immediately actionable work.”“really can’t say enough good things super empowering workshop!\namazing job identifying things didn’t know didn’t know,\nteaching level immediately actionable work.”“Thank much everyone taking amazing initiative teach young\nscientists software sustainability.”“Thank much everyone taking amazing initiative teach young\nscientists software sustainability.”“Thank putting together winter-school, super useful \n’m looking forward applying everything learned future projects\ngo deeper topics covered.”“Thank putting together winter-school, super useful \n’m looking forward applying everything learned future projects\ngo deeper topics covered.”","code":""},{"path":"chapter2.html","id":"joint-activities","chapter":"2 URSSI Conceptualization","heading":"2.6 Joint Activities","text":"URSSI conceptualization process, helped start two new activities \noverlapped goals, promote goals also \nbuild future partners later full URSSI institute.","code":""},{"path":"chapter2.html","id":"research-software-alliance-resa","chapter":"2 URSSI Conceptualization","heading":"2.6.1 Research Software Alliance (ReSA)","text":"ReSA founded 2018 support recognition valuing research software \nfundamental vital component research worldwide, instigated URSSI,\nUK Software Sustainability Institute,\nAustralian Research Data Commons.\nReSA’s mission bring research\nsoftware communities together collaborate advancement research software.\nRecent achievements include:Development research software guidelines policy makers, funder, publishers \nresearch community inclusion RDA COVID-19 Guidelines Recommendations (Research Data Alliance 2020)Development research software guidelines policy makers, funder, publishers \nresearch community inclusion RDA COVID-19 Guidelines Recommendations (Research Data Alliance 2020)Inclusion software draft revision OECD Committee Science Technology\nPolicy’s Enhanced Access Publicly Funded Data Science, Technology Innovation (become soft law) (TODO add link final document release)Inclusion software draft revision OECD Committee Science Technology\nPolicy’s Enhanced Access Publicly Funded Data Science, Technology Innovation (become soft law) (TODO add link final document release)Co-leadership FAIR 4 Research Software taskforce\nFORCE11\nRDA develop community-agreed principles implementation guidelinesCo-leadership FAIR 4 Research Software taskforce\nFORCE11\nRDA develop community-agreed principles implementation guidelinesSupport Gordon Betty Moore Foundation achieve ReSA’s goalsSupport Gordon Betty Moore Foundation achieve ReSA’s goalsThe Director ReSA Michelle Barker Steering Committee comprised :Neil Chue Hong, Director, Software Sustainability Institute, UKCatherine Jones, Software Engineering Group Leader, STFC, UKDaniel S. Katz, Assistant Director Scientific Software Applications, National Center Supercomputing Applications (NCSA), University Illinois, USAChris Mentzel, Executive Director, Stanford University, USAKarthik Ram, URSSI PI, University California, Berkeley, USAAndrew Treloar, Director, Platforms Engagements, Australian Research Data Commons, Australia","code":""},{"path":"chapter2.html","id":"research-software-engineering-rse","chapter":"2 URSSI Conceptualization","heading":"2.6.2 Research Software Engineering (RSE)","text":"2012 workshop run UK SSI, number UK researchers develop\nsoftware realized internally recognized number common elements\nwork , along others universities, \ncommonality others saw work roles, needed come\ntogether build develop community. stated James Hetheringon, \ndecided needed “develop profession scientific software engineer\ncareer track software developers academia.” SSI studied academic job\ndescriptions UK, found 10000, 400 related \nsoftware development, 194 different job titles. build recognition \ncommon software elements positions, SSI chose name “research software\nengineer”. SSI began publicizing idea, building community people \nidentified role, leading formation UK RSE Association, \nnow Society Research Software Engineering.\nSSI RSE Association/Society encouraged people performing RSE-like work\nalso identify title,\nbuilt RSE groups UK universities, encouraged universities change \njob titles, held workshops conferences RSEs, encouraged funding\nagency provide fellowships RSEs, built association/society,\nnow 2000 members (Hettrick 2016).number non-UK people (including URSSI PIs) started attending UK RSE\nconferences, SSI also supported activities grow international community.\nself-developed SSI-supported activities led RSE groups Germany,\nNetherlands, Nordic countries, US, Canada, Australia/New Zealand, South Africa, Belgium, \nnow held national workshops conferences. US Research Software\nEngineer Association (US-RSE) formed 2018, support participation\nthree five URSSI PIs, 420 members May 2020. US-RSE\nAssociation centered around three main goals:Community: provide coherent association identify role\n(necessarily title) Research Software Engineer, provide members\ncommunity ability share knowledge, professional connections, resources.Community: provide coherent association identify role\n(necessarily title) Research Software Engineer, provide members\ncommunity ability share knowledge, professional connections, resources.Advocacy: promote RSEs’ impact research, highlighting increasingly\ncritical valuable role RSEs serve.Advocacy: promote RSEs’ impact research, highlighting increasingly\ncritical valuable role RSEs serve.Resources: provide useful resources multiple demographics, including technical\ncareer development resources, information material support \nestablishment expansion RSE positions groups within research ecosystem.Resources: provide useful resources multiple demographics, including technical\ncareer development resources, information material support \nestablishment expansion RSE positions groups within research ecosystem.thus overlaps US-RSE’s goals URSSI’s clear reason\nus work together going forward.","code":""},{"path":"chapter2.html","id":"synthesis-of-urssi-activities","chapter":"2 URSSI Conceptualization","heading":"2.7 Synthesis of URSSI Activities","text":"following section describe common challenges dilemmas \nidentified across URSSI’s conceptualization activities. possible, identify\nrole URSSI play helping overcome challenges funded institute.Challenge 1: Decentralized expertiseThroughout planning activities, community stakeholders recognized\nalready exist number individual efforts help improve \ndevelopment, maintenance, overall sustainability research software \nUS. efforts, collectively, comprehensive scope,\ndecentralized structure expertise inefficient resource\ndiscovery delivery services. example many points expertise\nresearch software development (e.g., SWEBOK, RSEs), education training\n(e.g., academic initiatives, Carpentries), credit metrics (e.g., CiteAs),\nincubation (e.g., ESIP, UW eScience Institute) available \nindividuals specific institutions. However, currently comprehensive\norganization can serve coordinate activities, promote centers \nexpertise, ensure effort duplicated– role played\nadmirably UK Software Sustainability Institute.coordinating center, URSSI help solve challenge following ways:Broker connections points expertise serve coordinate\nefforts funding different experts better collaborate \nsustainable development, education, policy initiatives.Broker connections points expertise serve coordinate\nefforts funding different experts better collaborate \nsustainable development, education, policy initiatives.Identify convene experts help fill gaps exist service\ndelivery, example, Carpentries see gaps knowledge skill \nacquisition sustaining software education.Identify convene experts help fill gaps exist service\ndelivery, example, Carpentries see gaps knowledge skill \nacquisition sustaining software education.Disseminate best practices specific disciplines broader\nresearch community. acting center research software excellence\nURSSI space solutions one domain learned \nefficiently transferred another.Disseminate best practices specific disciplines broader\nresearch community. acting center research software excellence\nURSSI space solutions one domain learned \nefficiently transferred another.Coordinate help curate relevant research software packages \ndiscovery portals, https://libraries.io/Coordinate help curate relevant research software packages \ndiscovery portals, https://libraries.io/Challenge 2: Pathways sustainability non-commercial research softwareThroughout URSSI conceptualization activities, participants voiced concern\nviability valuable software projects seek\ncommercialization. Technology transfer programs universities \nresearch funding agencies (e.g. -Corps, SBIR/STTR) well established\nsuccessful helping entrepreneurially-focused software projects\nrecognize execute viable business models. transition pathway \npromoted software potential sustain fees \nlicensing agreements. However, equivalent university guidance \nsoftware projects like pursue non-commercial open source models\nsustainability.need US-based institute, divorced single university,\nhelp valuable research software projects realize non-commercial\nopen-source route sustainability. support include program, \nincubator, guide research software projects towards developing\nopen-source governance, budgeting, licensing, fiscal sponsorship service\nnon-commercial sustainability. view route, guidance \ninstitute, critical promoting ecosystem diverse research software\nprojects may readily amenable commercialization, \npotential build healthy viable volunteer developer communities \nalternative licensing.Challenge 3: Coordinated advocacy analysis policy changeRelated first challenge decentralized expertise, need\ncoordination targeted leadership around policy sustainable\nresearch software. Participants URSSI workshops described need \ncoordinating communities around emerging national, institutional, even\ndisciplinary specific policies downstream impact sustainability,\nsoftware citation principles, tenure promotion guidelines \nrecognize research software contributions, sustained funding financial\nsupport research software maintenance, software management plans\nexplicitly document expectations around software development archiving.Currently, community members take many policy activities additional\nprofessional service, volunteer work. secondary focus \none policy issue, turn, leads slow progress, high turnover volunteers,\nallow one person institution develop deep expertise\nneeded effective sustained analysis advocacy.institute dedicate time attention policy design, invest\npersonnel time developing needed expertise, coordinate sustainable\nlobbying network allow advocacy work become manageable,\neffective, result better outcomes research software stakeholders.\n, often need conduct advocacy work driven \nempirical research can substantiate one policy decision \nbetter another. institute dedicated activities \nfacilitate data-driven policy research lead stronger advocacy\npositions, benefit funding agencies, universities, research\ninstitutions seek adopt new policy aimed improving research\nsoftware sustainability.Challenge 4: Signals viabilityA valuable contribution URSSI workshop engagement activities \nconvening stakeholders expertise evaluation funding \nresearch software. stakeholders include current former program officers\nNSF, NIH, DoE, DoD, IMLS, well philanthropic organizations\nlike Gordon Betty Moore Alfred P. Sloan foundations. \nparticipants collective desire institute develop stronger\nsignals research software project’s viability; help evaluate \nproject’s potential long-term sustainability; help communities \nresearch software stakeholders coalesce around strategic funding initiatives\nbenefit research software investments.dedicated US institute focused software sustainability help meet\nchallenge number ways, recognize \noverarching simple solution. plan describe explains,\nnumerous places, URSSI can convene different communities\naddress complex problems like strategic financial investment, evaluation\nviability, etc.Challenge 5: Career Advancement CreditClosely related Challenges 1, 3 4 desire URSSI stakeholders \nsee institute dedicate time resources towards promoting recognition\nresearch software activities helping shape reliable career pathways\nresearch software engineers (RSEs). URSSI workshops, \nnear-unanimous agreement acknowledgement research software\ncontributions remains difficult career advancement lack\nclear guidance universities funding agencies make\nprogress issues.dedicated US-based institute research software sustainability \nplay leading role advocating best practices measurement,\nreward, credit research software activities. activity include\ndedicated research measuring evaluating software development activities,\nadvancing techniques use user impact evaluation, promoting formative\nmetrics conducive long-term viability. Relatedly, dedicated US-based\ninstitute better evaluate promote impact research software\nengineering positions currently exist advocate creation\n.next chapter, describe URSSI’s plan meet challenges.\nparticular, focus strategic investment US-based software\nsustainability institute practically organize , allocate budgets,\nmeasure progress challenges identified conceptualization phase.","code":""},{"path":"chapter3.html","id":"chapter3","chapter":"3 URSSI Plan","heading":"3 URSSI Plan","text":"Throughout URSSI conceptualization process, team worked overall\nplanning iteratively, using slides workshops URSSI website \ndisseminate current thoughts, using survey ethnographic studies \ninputs, using workshops (including slides shared note documents) \ndiscussion forum (using Discourse https://discuss.urssi.us) gather record feedback. Together,\nactivities plus internal discussions team focused mission \nvision working group led content document.","code":""},{"path":"chapter3.html","id":"mission-and-vision","chapter":"3 URSSI Plan","heading":"3.1 Mission and Vision","text":"URSSI PIs began develop mission vision statements late 2018. intent\nstatements succinctly state purpose URSSI’s existence\n(mission) based purpose URSSI strives achieve (vision). \nprocess developing statements :first two workshops, asked participants goals vision\nUS research software sustainability institute pursue.first two workshops, asked participants goals vision\nUS research software sustainability institute pursue.URSSI PIs identified institutions similar goals collected\nmission vision statements comparison.URSSI PIs identified institutions similar goals collected\nmission vision statements comparison.Eight members Senior Personnel Advisory Committee participated \nworking group focused developing URSSI’s mission vision statement.Eight members Senior Personnel Advisory Committee participated \nworking group focused developing URSSI’s mission vision statement.working group participant provided written set three mission \nthree vision statements based conceptualization proposal, workshop\nparticipant’s feedback, guidance URSSI PIs.working group participant provided written set three mission \nthree vision statements based conceptualization proposal, workshop\nparticipant’s feedback, guidance URSSI PIs.Neil Chue Hong, director Software Sustainability Institute UK,\nfacilitated synthesis working group’s feedback. synthesis process included \nteleconference participants discuss refine versions \nmission vision statement.Neil Chue Hong, director Software Sustainability Institute UK,\nfacilitated synthesis working group’s feedback. synthesis process included \nteleconference participants discuss refine versions \nmission vision statement.URSSI PIs presented drafts statement workshop participants\nfinal URSSI meeting Chicago refined final version statement.URSSI PIs presented drafts statement workshop participants\nfinal URSSI meeting Chicago refined final version statement.mission vision URSSI follows:Mission: mission improve recognition, development, use \nsoftware sustainable research enterprise. achieve mission\ncollaboratively developing education, outreach, software services\nemphasize open, transparent reproducible, cooperative practices. URSSI\ninstitute software expertise well social infrastructure \npromotes inclusive diverse community research software engineers,\nmaintainers, contributors, users.Vision: Empowered people, building better software, enabling exceptional research","code":""},{"path":"chapter3.html","id":"planning-assumptions-methods-and-principles","chapter":"3 URSSI Plan","heading":"3.2 Planning assumptions, methods, and principles","text":"following assumptions inputs planning process:plan based idea proposing NSF, therefore, focuses \nUS community. , however, work like-minded organization inside \noutside US, including Research Software Alliance (ReSA).\n(Also see potential partners listed next subsection.)plan based idea proposing NSF, therefore, focuses \nUS community. , however, work like-minded organization inside \noutside US, including Research Software Alliance (ReSA).\n(Also see potential partners listed next subsection.)propose institute 5-year duration potential 5-year\nextension, based NSF’s current institutes published documents.propose institute 5-year duration potential 5-year\nextension, based NSF’s current institutes published documents.budget URSSI $3m-$5m per year. take $3m baseline\nminimum funding level needed operate institute, institute\nright method achieve mission vision, build higher\ncost higher return activities baseline.budget URSSI $3m-$5m per year. take $3m baseline\nminimum funding level needed operate institute, institute\nright method achieve mission vision, build higher\ncost higher return activities baseline.demonstrated interest supporting URSSI goals private\nfoundations potential interest federal agencies, URSSI\nactivities planned set reinforcing (separable) activities,\npotentially different timelines.demonstrated interest supporting URSSI goals private\nfoundations potential interest federal agencies, URSSI\nactivities planned set reinforcing (separable) activities,\npotentially different timelines.strong need improved software sustainability across fields,\nURSSI solve need fields .strong need improved software sustainability across fields,\nURSSI solve need fields .many partners can help URSSI achieve goals, \noverlap goals goals partners (see next subsection)many partners can help URSSI achieve goals, \noverlap goals goals partners (see next subsection)practical URSSI directly work US research software development\ncommunity (develop research software US, including academia,\nnational laboratories, industry) due small size URSSI large size community, \nURSSI needs work indirectly leveraging groups.practical URSSI directly work US research software development\ncommunity (develop research software US, including academia,\nnational laboratories, industry) due small size URSSI large size community, \nURSSI needs work indirectly leveraging groups.Given mission vision, assumptions, plan use set methods\nensure URSSI successful:URSSI must choose set initial targeted communities efforts, focus \nperiod (predefined metrics success met predefined\ntime period passed without success), move next set targetsURSSI must choose set initial targeted communities efforts, focus \nperiod (predefined metrics success met predefined\ntime period passed without success), move next set targetsURSSI must work closely partners amplify efforts (see next subsection)URSSI must work closely partners amplify efforts (see next subsection)URSSI must clever using resources, attempting achieve multiple outputs\nactivities whenever possible.URSSI must clever using resources, attempting achieve multiple outputs\nactivities whenever possible.Guiding principles:Leverage existing organizations authority, credibility, resourcesLeverage existing organizations authority, credibility, resourcesFocus people, projectsFocus people, projectsEmbed diversity inclusion within aspects URSSIEmbed diversity inclusion within aspects URSSILeverage available resources (software, services, credit systems, training\nmaterials, etc.) possible rather reinventLeverage available resources (software, services, credit systems, training\nmaterials, etc.) possible rather reinventShare resources create allow others reuse build elsewhereShare resources create allow others reuse build elsewhereRespect learn volunteersRespect learn volunteersActivities end sustainability plan beyond URSSIActivities end sustainability plan beyond URSSIDistinguish software quality measures (badging, intrinsic) software impact measures (reuse, citation)Distinguish software quality measures (badging, intrinsic) software impact measures (reuse, citation)Sustain software sustaining communities (stewards, developers, maintainers,\nleaders, active users)Sustain software sustaining communities (stewards, developers, maintainers,\nleaders, active users)Coordinate activities rather start new ones possibleCoordinate activities rather start new ones possibleAdvocate promote variety solutions challenges, recognizing one\nsolution likely work stakeholders situationsAdvocate promote variety solutions challenges, recognizing one\nsolution likely work stakeholders situationsSome topics partially completely --scope URSSI:Software Commercialization. institute, URSSI position\nbroker existing bodies knowledge expertise, \nseek fill needed gaps expertise already exists. Relevant\npositioning route research software sustainability \nsoftware commercialization. view path sustainability\nalready well supported existing programs initiatives, \nalready funded NSF. principle, URSSI opposed\ndiscouraging research software commercialization. actively\nseek learn collaborate commercial software ecosystem,\nincluding technology transfer offices provide structured pathways \ncommercialization research software academic institutions. \nrole, URSSI might guide people deciding commercialization \nrealistic good choice software project, connect \ndecide existing support programs like\n-Corps. believe\nURSSI can uniquely provide, find lacking, support \nalternative routes sustainability open-source non-commercial\nfiscal sponsorship. alternative routes obviously less\nstraightforward, challenging remain viable option \nimproving long-term accessibility impact research\ninvestments software. majority even best research software projects\nwon’t commercially viable given size scope audience. \ncritical gap, commercialization open-source, URSSI seeks\nclose.Software Commercialization. institute, URSSI position\nbroker existing bodies knowledge expertise, \nseek fill needed gaps expertise already exists. Relevant\npositioning route research software sustainability \nsoftware commercialization. view path sustainability\nalready well supported existing programs initiatives, \nalready funded NSF. principle, URSSI opposed\ndiscouraging research software commercialization. actively\nseek learn collaborate commercial software ecosystem,\nincluding technology transfer offices provide structured pathways \ncommercialization research software academic institutions. \nrole, URSSI might guide people deciding commercialization \nrealistic good choice software project, connect \ndecide existing support programs like\n-Corps. believe\nURSSI can uniquely provide, find lacking, support \nalternative routes sustainability open-source non-commercial\nfiscal sponsorship. alternative routes obviously less\nstraightforward, challenging remain viable option \nimproving long-term accessibility impact research\ninvestments software. majority even best research software projects\nwon’t commercially viable given size scope audience. \ncritical gap, commercialization open-source, URSSI seeks\nclose.Software Development Maintenance. URSSI staff develop \nmaintain research software, URSSI provide funds projects ,\npart focused incubation training activity. Given small size\nURSSI large size software development maintenance community,\nhands-software work useful way URSSI impact.Software Development Maintenance. URSSI staff develop \nmaintain research software, URSSI provide funds projects ,\npart focused incubation training activity. Given small size\nURSSI large size software development maintenance community,\nhands-software work useful way URSSI impact.Infrastructure. URSSI run infrastructure research software\ncommunity. new infrastructure needed, URSSI work organizations\ninstigate projects create maintain infrastructure, run \norganizations.Infrastructure. URSSI run infrastructure research software\ncommunity. new infrastructure needed, URSSI work organizations\ninstigate projects create maintain infrastructure, run \norganizations.create maintain infrastructure, run\n[TODO: else --scope URSSI?]","code":""},{"path":"chapter3.html","id":"partners","chapter":"3 URSSI Plan","heading":"3.3 Partners","text":"URSSI work variety partners overlapping goals.\npurpose plan, list partners seek work, recognizing \npotential partner organizations made commitment, commitments \ndepend specific activities, specific funding opportunities. following table, list\npotential partners areas see opportunity collaboration. See \nappropriate chapters (e.g. Community & outreach (Chapter 4), Education & training (Chapter 5), etc.)\nspecific partnering opportunities area URSSI’s work.","code":""},{"path":"chapter3.html","id":"desired-impact","chapter":"3 URSSI Plan","heading":"3.4 Desired impact","text":"URSSI’s ultimate desired impact, stated vision, scholarly\nresearch fields. URSSI aims achieve\nimpact enabling encouraging contribution resources training research software\necosystem improve research software empower people \ncreate maintain software.\nremainder chapter, three elements impact, describe activities believe\ncontribute . Additionally, Chapter 10 (Metrics Evaluation),\nshow full set activities intended impacts.software, URSSI aims improve sustainability research software byDeveloping curating best practices software projects,\nincluding examining practices industry,\ntesting, governance, codes conduct, continuous integration.Developing curating best practices software projects,\nincluding examining practices industry,\ntesting, governance, codes conduct, continuous integration.Sharing information practices communities calls, training\nopportunities, incubator, community-developed bookSharing information practices communities calls, training\nopportunities, incubator, community-developed bookThe activities primary impact sustainability research software described \nCommunity & outreach (Chapter 4),\nEducation & training (Chapter 5), \nIncubator (Chapter 6).\nAdditionally, activities \nPolicy (Chapter 7) secondary impact\nsustainability research software.people, URSSI aims improve careers develop maintain\nresearch software :FellowshipsFellowshipsIn-person events community callsIn-person events community callsA summer school, incubator programA summer school, incubator programPromoting new career paths develop maintain research softwarePromoting new career paths develop maintain research softwareDeveloping advocating research software usage impact metrics \nfactor hiring promotion software developers maintainers,\nincluding promoting publication research softwareDeveloping advocating research software usage impact metrics \nfactor hiring promotion software developers maintainers,\nincluding promoting publication research softwareEncouraging diverse set participants enter research software\ndevelopment maintenance field decreasing structural systemic\nbarriers productive careers members underrepresented groupsEncouraging diverse set participants enter research software\ndevelopment maintenance field decreasing structural systemic\nbarriers productive careers members underrepresented groupsThe activities primary impact people careers described \nfour following chapters, \nCommunity & outreach (Chapter 4),\nEducation & training (Chapter 5),\nIncubator (Chapter 6), \nPolicy (Chapter 7).research software ecosystem, URSSI aims improve understanding functioning ecosystem byIn-person events community callsIn-person events community callsA newsletter active social media presenceA newsletter active social media presenceIncentivizing contributions public softwareIncentivizing contributions public softwareDisentangling software quality software impact, including\npromoting software credit citation mechanismsDisentangling software quality software impact, including\npromoting software credit citation mechanismsDocumenting use research software research providing\nsystematic regular analysis impact software researchDocumenting use research software research providing\nsystematic regular analysis impact software researchPromoting increased understanding importance research software researchPromoting increased understanding importance research software researchAdvocating increased funding opportunities software maintenanceAdvocating increased funding opportunities software maintenanceCreating award program recognize software contributionsCreating award program recognize software contributionsGrowing participating communities around field research softwareGrowing participating communities around field research softwareThe activities primary impact research software ecosystem described \nCommunity & outreach (Chapter 4) \nPolicy (Chapter 7).\nAdditionally, activities \nEducation & training (Chapter 5)\nsecondary impact\nresearch software ecosystem.","code":""},{"path":"Ch-Comm.html","id":"Ch-Comm","chapter":"4 Community & Outreach","heading":"4 Community & Outreach","text":"Researchers academia national labs incentivized become experts one specialized domains.\nresearch software plays critical role achieving mastery, skills develop software rarely taught formal settings.\nskills often picked secondary special interest communities online resources.\nplan formalize community resources associated activities institute plans.institute’s Community area build thriving community like-minded peers researchers seek advice, learn training opportunities, funding announcements.\ncommunity manager curate state art information best practices research software development. work closely Center Scientific Collaboration Community Engagement (CSCCE) train research engineer seeks pursue career community management. CSCCE specalizes professionalizing scientific community building training program can completed community manager getting started position.\nCommunity area also administer competitive fellowship program early career researchers.\nfellowships provide funding, training, prestige/recognition pursue career promotes development use research software.\nthriving community also provide venues annual conference focused software across disciplines researchers can share work, learn new software, software development techniques.Many current challenges around sustainability software, produce , mostly social cultural limited unassailable technical challenges.\nareas institute Policy Education & Training lay guidelines training necessary grow research software enterprise, strong community strategy key maintaining .\nURSSI act hub types researchers interested using developing research software.\ninstitute provide necessary resources address shared challenges help catalyze collaborations tackle emerging problems.\nURSSI’s Community & Outreach area achieve mission set activities described .","code":""},{"path":"Ch-Comm.html","id":"community-outreach-resources","chapter":"4 Community & Outreach","heading":"4.1 Community & Outreach Resources","text":"Managing URSSI community require following staff resources:Managing communications (website regular posts, moderating mailing list), producing high quality newsletters, acting community liaison require 2-3 FTEs.Managing communications (website regular posts, moderating mailing list), producing high quality newsletters, acting community liaison require 2-3 FTEs.involve Director Community (part PI’s time), remaining part area’s workforce split two positions: community manager fellowship coordinator (split Incubator Area), reporting Director Community. work closely Center Scientific Collaboration Community Engagement recruit one scientific community manager trainees fellow. may also recruit someone undergo training upon joining URSSI.involve Director Community (part PI’s time), remaining part area’s workforce split two positions: community manager fellowship coordinator (split Incubator Area), reporting Director Community. work closely Center Scientific Collaboration Community Engagement recruit one scientific community manager trainees fellow. may also recruit someone undergo training upon joining URSSI.Besides budget 2-3 positions, Community & Outreach area institute also require budget :Technical infrastructure (including: website, mailing list, archiving resources). Maintaining high quality newsletter require access high quality data feeds, require paid subscriptions. team also require technical help maintain static site GitHub.Technical infrastructure (including: website, mailing list, archiving resources). Maintaining high quality newsletter require access high quality data feeds, require paid subscriptions. team also require technical help maintain static site GitHub.One URSSI fellow (part cohort 4-5 fellows/year) can asked focus community. Much like BSSW fellowship, URSSI fellow can propose community related topic pursue year fellowship.One URSSI fellow (part cohort 4-5 fellows/year) can asked focus community. Much like BSSW fellowship, URSSI fellow can propose community related topic pursue year fellowship.Participant support fellows speakers attend annual meetingsParticipant support fellows speakers attend annual meetingsBase costs annual URSSI conference (rest supported registration sponsorships)Base costs annual URSSI conference (rest supported registration sponsorships)","code":""},{"path":"Ch-Comm.html","id":"community-outreach-methods","chapter":"4 Community & Outreach","heading":"4.2 Community & Outreach Methods","text":"","code":""},{"path":"Ch-Comm.html","id":"fellowship-program","chapter":"4 Community & Outreach","heading":"4.2.1 Fellowship Program","text":"URSSI run annual fellowship program modeled heavily successful program run UK Software Sustainability Institute (Sufi Jay 2018). recruit 3-5 fellows pool US graduate students, postdocs, research software engineers.\nSince research software suffers lack diversity, fellowship selection process committee focus providing opportunities candidates underrepresented groups. community team rely existing research tools candidate selection make decision making transparent free human biases much possible (Huppenkothen, McFee, Norén 2020).\nOne criteria used select fellows diversity statement fellows required submit, ~50% selected fellows members underrepresented groups, lower bound 25%.\nfellow affiliate one areas URSSI (Policy, Education, Community, Incubator) propose activity take 1 day week time. Fellowship stipend provide appropriate time buyout also cover travel biannual collaborations workshops, annual URSSI conference. Fellows given additional travel budget present research software activities society discipline conferences. fellow paired URSSI mentor success based entry exit interviews.fellowship program aimed people careers portion URSSI’s impact goals.","code":""},{"path":"Ch-Comm.html","id":"in-person-events","chapter":"4 Community & Outreach","heading":"4.2.2 In-person events","text":"Create new community events:\nBuilding upon work small workshops Workshop Sustainable Software Science: Practice Experiences (WSSSPE), opportunity URSSI host annual -person conference scientists, developers, students connect discuss research software development applications.\nOne criteria used select funded attendees diversity statement applicants required submit, least 25% selected applicants funded members underrepresented groups.\nconference initially medium sized (limit 300 participants) grow depending interest.\nTalks workshops span entire continuum applied computational research software development.\nevent also feature “demo day” URSSI incubated projects, cross cutting activity Incubator program.\ncosts event supplemented mix registration fees sponsorships.-person events aimed people careers research software ecosystem portions URSSI’s impact goals.","code":""},{"path":"Ch-Comm.html","id":"online-community-events","chapter":"4 Community & Outreach","heading":"4.2.3 Online community events","text":"Promote existing activities: One URSSI’s strengths lie amplifying work existing initiatives.\nachieve showcasing projects weekly newsletter, inviting projects present work monthly community calls (aka webinars), highlighting/crossposting news via partner organizations Carpentries, rOpenSci, Workshop Sustainable Software Science (WSSSPE), Mozilla, others. community manager work various parters data feeds curate disseminate high quality newsletter similar data science newsletter operated Academic Data Science Allaince (ADSA). institute budget costs associated newsfeed subscriptions.Community calls: Modeled successful series organized Mozilla rOpenSci, monthly webinar series expose researchers latest best practices new trends research software, provide opportunity interact prominent research software engineers.\nfree open series provide additional opportunity community participate, especially constrained travel.\nPast calls, including videos, code, Q&archived made searchable dedicated community coordinator.\nconsider diversity chosing participants present calls, seek least 25% presenters members underrepresented groups.Online community events aimed three portions URSSI’s impact goals: research software sustainability, people careers, research software ecosystem.","code":""},{"path":"Ch-Comm.html","id":"Ch-Comm-Best-Practices","chapter":"4 Community & Outreach","heading":"4.2.4 Curating and disseminating best practices","text":"URSSI fellows convene ad hoc panels experts curate information state art practices scientific computing.\ntopics cover many foundations research software engineering including limited collaborative software developing modern version control, software testing, code review, packaging distribution, overall software design.\nmaterials also provide strong guidance open science practices increase impact work.\ninclude guidance licensing, properly archiving research software, citation.Curating disseminating best practices primarily aimed research software sustainability portion URSSI’s impact goals, secondarily people careers research software ecosystem portions.","code":""},{"path":"Ch-Comm.html","id":"newsletter-and-social-media","chapter":"4 Community & Outreach","heading":"4.2.5 Newsletter and social media","text":"huge opportunity URSSI produce disseminate high quality newsletter keep community informed research software news, notable research papers, critical software, events job openings.\ndata science community already benefits newsletter maintained Laura Noren Brad Stegner financially supported Academic Data Science Alliance.\ncommunity manager curate news, jobs, software releases, conferences, activities organizations (crossposting).\ncommunity calls, invite speakers related communities SSI, BSSw, US-RSE, also solicit presentations larger community.\nmaterial stored public GitHub repositories permissive license allow people use remix content contributing back original source.four major channels communication website, newsletter, mailing list, accounts social media Twitter Slack.newsletter social media primarily aimed research software ecosystem portion URSSI’s impact goals, secondarily research software sustainability people careers portions.","code":""},{"path":"Ch-Comm.html","id":"other-activities","chapter":"4 Community & Outreach","heading":"4.2.6 Other activities","text":"Besides activities described , institute feature ongoing activities:URSSI serve broker software expertise connect developers scientific projects seeking contractors, expert advice collaborators grants. community team coordinate combination job/skills board better leverage expertise among US institutions. [TODO: Flesh details program]Promote training events URSSI communitiesDevelop ambassador program early career researchers promote sustainable software current issues local communities. Examples similar programs include Campus Champions program XSEDE, SSI fellows program (Sufi Jay 2018).URSSI ambassador program light touch activity (less engaged fellows program) provide students US colleges universities resources support campus colleagues effectively use research software advance research. program provide venue build community among early stage students (advanced undergraduates, beginning graduate students).\nOne criteria used select ambassadors diversity statement potential ambassadors required submit, least 25% ambassadors members underrepresented groups.Hosting blog, series staff guest blog posts, including cross-posting relevant blog posts others","code":""},{"path":"Ch-Comm.html","id":"community-outreach-assessment-and-metrics","chapter":"4 Community & Outreach","heading":"4.3 Community & Outreach Assessment and Metrics","text":"Goals: Steadily grow number subscribers participants yearGrow diversity participants, instructors, speakers year. Self reported data affiliations domains expertise also provide measurable metric impact across domains.Grow number applications receive fellowship program every yearGrow rate paper poster submissions every yearImprove careers participate URSSIMetrics:Number subscribers newsletter, visitors website, social media followers timeQuantify instructors, presenters, lesson developers, participants demographic geographic breakdownCount citations software participated URSSITracking career paths fellows also act measure success programImpacts:table maps URSSI activities chapter three portions URSSI’s intended impact.\n(complete table impacts URSSI activities can found Chapter 10 (Metrics Evaluation).)\nimpact cells, X indicates designed primary impact activity, y indicates\ndesigned secondary impact.\nTable 4.1: Impact table\n","code":""},{"path":"Ch-Edu.html","id":"Ch-Edu","chapter":"5 Education & Training","heading":"5 Education & Training","text":"Researchers often view software development skills separate , complementary \ndisciplinary training. perspective introduces dilemma researchers, particularly\nearly-career researchers, need master discipline simultaneously acquire\nsufficiently-good software engineering skills. forced choose, typically make sacrifices\ntake shortcuts software engineering, view disciplinary skills knowledge \nimportant careers, rewarded current incentive systems. , many\nresearchers aspire become software engineering experts, approach acquisition \nsoftware skills means research end. approach implicitly encouraged fact\neducational content disciplines require software skills actually\ninclude sufficient discussion software development engineering. result, valuable\nskills packaging, testing, releasing, archiving, even designing research software \ndramatically underdeveloped overall research ecosystem.Indeed, previous studies demonstrate researchers rarely purposely trained develop software.\n2017 survey US National Postdoctoral Association members regarding postdocs’ use software \nresearch training regarding software development found 95% respondents use research\nsoftware. However, 54% (n = 104) respondents survey reported \nreceived training software development (Nangia Katz 2017). similar survey software\nuse training UK repeats finding: 2014, Hettrick et al. asked researchers \nrandomly selected researchers 15 Russell Group universities software use training.\n417 responses, 45% reported training software development. 55% respondents\nreported received training software development, 73% received form \nformal training software development course, remaining 27% self-taught. analyzing\nresults, Hettrick et al. report 21% respondents develop software \ntraining software development (Hettrick 2018, 2014). 2016 survey\n704 PIs Biological Sciences Directorate US NSF found pressing unmet\nneeds training data integration, data management, scaling analyses HPC (Barone, Williams, Micklos 2017).\n2018 survey almost 1600 scientist-developers found 82% respondents felt \nspending “time” “much time” developing software 10 years ago (Pinto, Wiese, Dias 2018).gap software development training general, ’s also additional\ngap across gender. analyzed gender (self reported binary men women) first\ntwo surveys show 39% female respondents UK 32% USA report\nreceived form software development training, compared 63% male respondents\nUK 64% USA.lack training new, newly discovered. Greg Wilson written\n(Wilson 2016; Software Carpentry, n.d.) history Software Carpentry:1995–96, [Wilson] organized series articles IEEE Computational Science &\nEngineering titled, “Computer Scientists Teach Physical Scientists \nEngineers?”. grew frustration working scientists wanted\nrun walk, .e., parallelize complex programs broken\nself-contained functions, automated tests, \nversion control.response, John Reynders (director Advanced Computing Laboratory \nLos Alamos National Laboratory) invited [Wilson] Brent Gorda (now Intel) \nteach week-long course LANL staff. course ran first time July\n1998, repeated nine times next four years. eventually wound \nGorda [Wilson] moved projects, two valuable lessons learned:tremendous pent-demand training basic skills.tremendous pent-demand training basic skills.Textbook software engineering right thing teach scientists.Textbook software engineering right thing teach scientists.need led Software Carpentry organization, built successful train--trainer\nmodel collaborative lesson development delivery, used model\nbuild Data Carpentry, merged Software Carpentry Carpentries,\nnow also includes Library Carpentry. Carpentries developed highly impactful\ntraining content events meet intermediate need training researchers \nbetter develop software. Many computing centers, including funded NSF DOE,\nalso long user training types development (similar Los\nAlamos), example, joint activities run \nTeraGrid now\nXSEDE, Argonne’s\nATPESC. Given success Carpentries,\ncomputing center training events often either include contribute Carpentries\nlessons, complement . addition, NSF-funded software institutes (e.g.,\nMolSSI, SGCI, IRIS-HEP) also developing training resources target\ncommunities, similarly making use , contributing , complementing Carpentries.many researchers may learn program , opportunities \nlearn software engineering software deisgn less available. Therefore, believe\nimportant role US-based research software institute\ncan play expand breadth depth training available, \ncoordinate facilitate acquisition software engineering expertise researchers\nengaged various development activities. Rather reinventing content, anticipate\ncollaborating pointing relevant resources developed related efforts.Education & Training thrust URSSI complements builds upon existing efforts \nfollowing planned activities (detail appears ):Develop annually run summer school practices sustainable software development\nresearch software.Develop annually run summer school practices sustainable software development\nresearch software.Develop Research Project Carpentry lesson program teaches people turn code\nformal project.Develop Research Project Carpentry lesson program teaches people turn code\nformal project.Plan review service software project plans (note implementation \nplan likely scope URSSI ).Plan review service software project plans (note implementation \nplan likely scope URSSI ).Evaluate document successes failures industrial software development practices\nresearch software.Evaluate document successes failures industrial software development practices\nresearch software.Compile maintain body knowledge best practices research software development.\n(URSSI activity seek aggregate existing practices, serve outlet\nemerging practices domain-specific software institute, e.g., MolSSI, SGCI, IRIS-HEP)Compile maintain body knowledge best practices research software development.\n(URSSI activity seek aggregate existing practices, serve outlet\nemerging practices domain-specific software institute, e.g., MolSSI, SGCI, IRIS-HEP)","code":""},{"path":"Ch-Edu.html","id":"education-training-resources","chapter":"5 Education & Training","heading":"5.1 Education & Training resources","text":"area requires following staff:Training Lead: coordinates training activities assessment \nactivities (1 FTE).Training Lead: coordinates training activities assessment \nactivities (1 FTE).Training Officer: assists Training Lead coordination training activities,\ndevelops delivers training activities (1 FTE).Training Officer: assists Training Lead coordination training activities,\ndevelops delivers training activities (1 FTE).Assessment Coordinator: leads assessment efforts, conjunction Training\nLead (position shared parts project) (0.5 FTE).Assessment Coordinator: leads assessment efforts, conjunction Training\nLead (position shared parts project) (0.5 FTE).Research Coordinator: leads effort gather experiences research\nsoftware projects (0.25-0.5 FTE).Research Coordinator: leads effort gather experiences research\nsoftware projects (0.25-0.5 FTE).","code":""},{"path":"Ch-Edu.html","id":"education-training-methods","chapter":"5 Education & Training","heading":"5.2 Education & Training methods","text":"section provides details plan design execute \nactivities within URSSI.","code":""},{"path":"Ch-Edu.html","id":"develop-and-annually-run-a-summer-school-on-practices-for-sustainable-software-development-for-research-software","chapter":"5 Education & Training","heading":"5.2.1 Develop and annually run a summer school on practices for sustainable software development for research software","text":"Overview: conceptualization phase, identified need additional,\nfocused training opportunities sustainable software development practices researchers\ndomain covered existing institute. One primary reasons \nneed generally difficult degree programs make room type \ncontent. plan meet need summer school, proven method \nproviding hands-training transfer skills students, case sustainable\nsoftware development practices research software development. conducted Pilot\nWinter School part conceptualization process. details activity appear\nChapter 2. plan described builds key lessons\nlearned, including: (1) school needs longer allow discussion time\nfocused time students work code, applying lessons \nlectures, (2) presence additional helpers outside primary instructors\nquite beneficial help answer specific questions students.Content: Based needs identified survey, workshops, discussions,\nidentified following topics candidates inclusion school:\n(1) software design (including modularity), (2) software testing,\n(3) packaging distributing code,\n(4) collaborative software development modern version control (.e., git/GitHub),\n(5) peer code review, (6) open science principles, (7) software citation.Format: summer school 1-week -person event. plan follow \nsuccessful PNAS hackweek model (Huppenkothen et al. 2018) allocate 50% time\nlectures 50% time putting concepts practice. \ninvite instructors expertise different topic areas (see ) participate\ndeliver lectures, take diversity consideration selecting instructors.\nOne criteria used select participants diversity statement potential participants\nrequired submit, least 25% selected participants members underrepresented groups.\nfacilitate “hacking” time,\nask participants bring code project wish work \nschool. “hacking sessions” provide ample opportunities participants \nhands-time applying concepts lectures code projects. sessions\nalso provide time code reviews ad hoc topics arise school.\ninstructors available hands-time help participants \nneeded. end school, participants substantial intellectual\nknowledge experiential knowledge. researchers often sufficient\ntime training attend events like one, alternative face--face\nsummer school events, also plan package content Carpentries-style lessons\ncan used either shorter training sessions, webinars, asynchronously.URSSI summer school primarily aimed people careers portion URSSI’s impact goals, secondarily research software sustainability research software ecosystem portions.","code":""},{"path":"Ch-Edu.html","id":"develop-a-research-project-carpentry-lesson-program-that-teaches-people-how-to-turn-code-into-a-formal-project","chapter":"5 Education & Training","heading":"5.2.2 Develop a Research Project Carpentry lesson program that teaches people how to turn code into a formal project","text":"Overview: One challenge faced many research software developers convert\nsmall (individual) coding effort formal project. situation occurs\nfrequently researchers develop small units code accomplish tasks important \nwork. researchers exposed code units, often want\neither use code, add code, . point researcher\nneeds convert code formal project, ensure quality others\nuse allow community contribute . Therefore, propose develop\nResearch Project Carpentry lesson plan, along similar lines Software Carpentry, \nhelp researchers make transition individual coding effort \ncommunity-focused project.Content: goal effort help projects develop good project plan.\n, Research Project Carpentries lesson program focus helping researchers\nunderstand content good plan needs contain. also provide information\nresearchers need making choices various practices relevant\nparticular project. topics covered Research Project Carpentry include:\n(1) requirements elicitation, (2) issue tracking, (3) source version control, (4) testing,\n(5) documentation, (6) packaging distribution, (7) pair programming, (8) code review, \n(9) metrics. Note overlap focus Research Project Carpentry\nSummer School described . anticipate reusing relevant content efforts.Format: develop modules topics carpentries-style modules. approach\nallow Research Projects Carpentries materials used either face--face training\ncourse, like Summer School, stand-alone units. flexibility allow researchers\naccess content mechanism relevant . material tested,\nuse use diversity statement submitted potential participants input decision\nprocess, least 25% selected participants members underrepresented groups.Note: activity relevant URSSI effort, believe appeal\nbeyond URSSI. Therefore, even though include plan, also seek funding \nsupport organizations outside NSF. also plan solicit organizations \nindividuals contribute activity. URSSI lead work, organizing community\ninclude external participants.Research Project Carpentry lesson program primarily aimed research software sustainability portion URSSI’s impact goals, secondarily research software ecosystem portion.","code":""},{"path":"Ch-Edu.html","id":"plan-a-review-service-for-software-project-plans","chapter":"5 Education & Training","heading":"5.2.3 Plan a review service for software project plans","text":"Building work done Research Project Carpentries, URSSI identified need \nservice experts review comment proposed project plans. Researchers \ninterested service submit project plan specified format. , experts\nreview plan ensure (1) complete respect content necessary\ntype project current stage, well (2) choices made aspect \nproject plan consistent best practices. review completed, reviewer\nwork project team help resolve deficiencies identified original\nproject plan. model akin used many “incubators” start-companies.activity likely beyond scope URSSI, create initial plan ,\nseek partner organizations pursuing similar efforts explore\nexternal funding sources. addition operating service, URSSI partners need\ndevelop make available following resources: (1) templates project plans,\n(2) checklists researchers follow developing plan, (3) guidance \nchoose various alternatives section plan.softare project plan review service aimed research software sustainability portion URSSI’s impact goals.","code":""},{"path":"Ch-Edu.html","id":"evaluate-and-document-successes-and-failures-of-the-use-of-industrial-software-development-practices-in-research-software","chapter":"5 Education & Training","heading":"5.2.4 Evaluate and document successes and failures of the use of industrial software development practices in research software","text":"Industrial software engineering developed refined number best practices \nsoftware engineering software development, resulting large body related literature.\nConversely, always clear practices relevant use developing\nresearch software, notably different incentive structures developers\nresearch arena. also always clear aspects\nresearch software domain motivate need develop new software engineering \nsoftware development practices handle unique contexts within research software\nexists. accomplish activity, URSSI need perform following steps.First, URSSI gather experience reports describing successful unsuccessful use\nindustrial software engineering software development practices research software\nprojects. Gathering experiences involve conducting surveys interviews \ndevelopers research software document important information. addition \nsuccesses failures specific practices, experience reports also document\ncases developers research software encountered situation problem \nunable find software engineering software development practices \nrelevant. Cases lack relevant practices suggest opportunities \ncreation new practices.Second, URSSI analyze experience reports systematize successes failures\ndevelop series evidence-based lessons learned. information \nbased upon real experiences research projects, great value \nresearch software projects.results efforts feed next activity providing concrete experiences\ncan document best practices. experiences beneficial \ndraw experiences real projects, knowledge context within\npractice works. context help provide description limitations\npractice, equally important document.activity primarily aimed research software sustainability portion URSSI’s impact goals, secondarily research software ecosystem portion.","code":""},{"path":"Ch-Edu.html","id":"compile-and-maintain-a-body-of-knowledge-of-best-practices-for-research-software-development","chapter":"5 Education & Training","heading":"5.2.5 Compile and maintain a body of knowledge of best practices for research software development","text":"Based outcomes activities, URSSI develop portal provide living\ninformation best practices research software development. addition including\ncontent developed activities, URSSI also actively find, various\nmeans include workshops surveys, curate information sites related\ndevelopment research scientific software. specifically ensure \ninformation produced Carpentries included, relevant.curate following types information:Checklists sustainable software - much content overlap \nideas discussed earlier activities.Checklists sustainable software - much content overlap \nideas discussed earlier activities.Templates use developing software, including templates project plans,\ntemplates documenting requirements, templates test planning, templates\ncommunity guidelines policies.Templates use developing software, including templates project plans,\ntemplates documenting requirements, templates test planning, templates\ncommunity guidelines policies.Badging efforts provide recognition various qualities research software\nresearch software projects.Badging efforts provide recognition various qualities research software\nresearch software projects.addition best practices, URSSI clearinghouse also curate information\ntraining resources. addition providing links URSSI-developed training\n(described ), also link relevant training resources developed\nefforts like MoLSSI, SGCI, IRIS-HEP. help individual researchers\nteams better understand make use various training options, \ndevelop roadmaps guide people relevant training current situation.activity also primarily aimed research software sustainability portion URSSI’s impact goals, secondarily research software ecosystem portion.","code":""},{"path":"Ch-Edu.html","id":"cross-cutting-activities","chapter":"5 Education & Training","heading":"5.3 Cross-cutting activities","text":"support five activities described , URSSI also need perform number\ncross-cutting activities follows:Curriculum Development Coordination\nachieve goals stated , URSSI need support development new\ntraining materials. anticipate providing support experts research software\ncommunity can take existing knowledge package Carpentries-style\nformat amenable used various types training activities URSSI\nsupport. Importantly, training proposed meant build upon, \nprovide complement existing educational outreach efforts. training provide\nfollow , advanced content Carpentries, longer duration.\ncan provide advanced content target audience subset audience\nfocused Carpentries.Curriculum Development Coordination\nachieve goals stated , URSSI need support development new\ntraining materials. anticipate providing support experts research software\ncommunity can take existing knowledge package Carpentries-style\nformat amenable used various types training activities URSSI\nsupport. Importantly, training proposed meant build upon, \nprovide complement existing educational outreach efforts. training provide\nfollow , advanced content Carpentries, longer duration.\ncan provide advanced content target audience subset audience\nfocused Carpentries.Instructor Training\nhelp deliver developed content wide range audiences various\nlocations, URSSI need provide support training instructors. instructors\nintegral success Summer School Research Projects Carpentry.Instructor Training\nhelp deliver developed content wide range audiences various\nlocations, URSSI need provide support training instructors. instructors\nintegral success Summer School Research Projects Carpentry.Piloting Workshops\ndevelop content, conduct smaller workshops pilot content ensure\nsufficiency deploying larger audience. asking people\nparticipate content development providing feedback, need resources\nsupport travel instructors participants.Piloting Workshops\ndevelop content, conduct smaller workshops pilot content ensure\nsufficiency deploying larger audience. asking people\nparticipate content development providing feedback, need resources\nsupport travel instructors participants.Gathering Experiences Successes Failures Software Practices\nURSSI support team researchers, experienced survey interview methods,\ngather experiences, summarize results, document findings. addition, URSSI \nneed provide support travel URSSI personnel meet members research projects.Gathering Experiences Successes Failures Software Practices\nURSSI support team researchers, experienced survey interview methods,\ngather experiences, summarize results, document findings. addition, URSSI \nneed provide support travel URSSI personnel meet members research projects.Conducting Workshops\nURSSI provide support Summer School Research Project Carpentries instructors\ntravel workshops. URSSI also provide small fellowships instructors\ncompensate time required participate. addition, increase participation\ndiverse community, URSSI provide travel support small number workshop\nparticipants, determined based need individual cases.Conducting Workshops\nURSSI provide support Summer School Research Project Carpentries instructors\ntravel workshops. URSSI also provide small fellowships instructors\ncompensate time required participate. addition, increase participation\ndiverse community, URSSI provide travel support small number workshop\nparticipants, determined based need individual cases.Packaging Sharing\nURSSI develops content related educational activities described chapter, \npackage content shareable format. make content freely\navailable GitHub. also archive release content Zenodo using proper\nlicense allows anyone use /modify content needed. addition, \nstrive work Carpentries enable content reach people.Packaging Sharing\nURSSI develops content related educational activities described chapter, \npackage content shareable format. make content freely\navailable GitHub. also archive release content Zenodo using proper\nlicense allows anyone use /modify content needed. addition, \nstrive work Carpentries enable content reach people.","code":""},{"path":"Ch-Edu.html","id":"education-training-metricsmilestones","chapter":"5 Education & Training","heading":"5.4 Education & Training metrics/milestones","text":"ensure training activities providing sufficient content, URSSI conduct\nnumerous assessment activities. activities occur concurrently \ntraining activities, .e., entry exit surveys, well longitudinally \ntraining. benefit conducting assessment longitudinally provides insight\nwhether content learned training viewed useful time real\nprojects evolve.specific measures gather include:Post-event evaluations: workshops training courses, conduct follow-surveys\nevaluate value content. conduct evaluations immediately end \nevent information fresh attendees’ minds. conduct \nfollow-survey 6 months, 1 year, 3 years later evaluate applicability \ncontent attendees’ work. conducting evaluations, build lessons\nlearned guidance Carpentries Assessment Network.Post-event evaluations: workshops training courses, conduct follow-surveys\nevaluate value content. conduct evaluations immediately end \nevent information fresh attendees’ minds. conduct \nfollow-survey 6 months, 1 year, 3 years later evaluate applicability \ncontent attendees’ work. conducting evaluations, build lessons\nlearned guidance Carpentries Assessment Network.Demand: measure demand content number people apply attend\nvarious training events workshops.Demand: measure demand content number people apply attend\nvarious training events workshops.Use material: measure downloads use information produce.Use material: measure downloads use information produce.Impacts:table maps URSSI activities chapter three portions URSSI’s intended impact.\n(complete table impacts URSSI activities can found Chapter 10 (Metrics Evaluation).)\nimpact cells, X indicates designed primary impact activity, y indicates\ndesigned secondary impact.\nTable 5.1: Impact table\n","code":""},{"path":"Ch-Incubator.html","id":"Ch-Incubator","chapter":"6 Incubator","heading":"6 Incubator","text":"intent URSSI Incubator support software projects seeking grow, transition open-source model development, improve software engineering practices. incubator plans providing mentorship, small amount funding, guided support improving governance, documentation, financial planning, evaluating development practices. following sections describe motivation Incubator program focused research software.","code":""},{"path":"Ch-Incubator.html","id":"background","chapter":"6 Incubator","heading":"6.1 Background","text":"Common tasks solved research software often include generation, analysis, visualization, processing data.\nsoftware solutions , just often, generalizable beyond immediate needs individual researcher, research group, particular research effort. However, institutional personal incentives develop generalizable research software, package software reuse, create meaningful documentation, share software open repositories.\nactivities requires substantial investments time, money, effort.researchers return investment may minimal - software rarely cited scholarly literature (Howison Bullard 2016; Hwang et al. 2017; Hsu et al. 2019; Park Wolfram 2019), tenure promotion committees rarely consider software contributions (Moher et al. 2018), grant funding often acknowledges software development byproduct rather substantive contribution research project (Broman et al. 2017; Siepel 2019).challenges despite increasing evidence value software sharing reuse addressing research challenges require fast efficient community response.\nexample, Medical Research Center UK currently using 13 year old pandemic simulation codebase model control measures COVID-19.\n, ’ve attracted collaborators Microsoft, Abdul Latif Jameel Institute Disease Emergency Analytics, Collaborating Centre Infectious Disease Modelling document, refactor, extend code.\noriginal author simulation code acknowledged numerous imperfections,1 ability start existing working model saved time, money, effort combating global pandemic.Contemporary research littered similar examples - imperfect software valuable one purpose can made broadly useful shared, properly documented, made available sustainable reuse.\nFinding ways encourage support research software remains accessible future improvements uses primary goal URSSI.\n, currently exists little guidance single research software project can transition individual efforts small set researchers distributed open model development attracts retains valuable communities contributors (Howison 2015).Open source models helpful, , reference forms cooperative community organizing believe valuable developing sustainable research software ecosystem.\nopen-source model basic features community development necessary sustainable research software: code openly licensed reuse, members distributed across time space, organization development efforts depend, part, upon loosely connected individuals making small contributions (peer-production).2\ntypes models collaboratively organizing software project substantially different researchers trained learn develop software.\nresearch software development currently focused solving immediate short-term individual needs rather collaboratively building generalizable solutions performing necessary maintenance software.3\nobviously beneficial valuable modes collaborative software development can play prominent role research software ecosystem.\nfollowing section justify working assumptions open models software development can lead sustainable research software, propose design implementation research software incubator program help foster transition open-source, similar, forms research software development.","code":""},{"path":"Ch-Incubator.html","id":"evidence-base","chapter":"6 Incubator","heading":"6.2 Evidence base","text":"currently exist several detailed taxonomies successful open source community models, including Apache Project Maturity Model Mozilla’s Open Source Archetypes.\nfeatures differentiate one open source model another often subtle, important, project organization, credit distribution, methods reaching consensus strategic decisions. Decades empirical research open-source provides following key findings relevant likely success distributed research software development:Governance open source often includes framework organizing distributed work, establishing formal informal roles participants, managing access resources, distributing credit work performed (O’Mahony 2007 ).\nMany previous studies open-source success (measured long-term usefulness accessibility codebase) shown vertical authority structures (decisions made responsibilities delegated) horizontal coordination (open contributions) key governance features frameworks can help make explicit transparent (Stewart 2016).\ncontributors maintenance responsibilities grow scope, software governance research also emphasized importance designing coordination processes contributors can empowered self-select tasks lead positive outcomes software project time (Shaikh Henfridsson 2017).Governance open source often includes framework organizing distributed work, establishing formal informal roles participants, managing access resources, distributing credit work performed (O’Mahony 2007 ).\nMany previous studies open-source success (measured long-term usefulness accessibility codebase) shown vertical authority structures (decisions made responsibilities delegated) horizontal coordination (open contributions) key governance features frameworks can help make explicit transparent (Stewart 2016).\ncontributors maintenance responsibilities grow scope, software governance research also emphasized importance designing coordination processes contributors can empowered self-select tasks lead positive outcomes software project time (Shaikh Henfridsson 2017).Documentation plays key role open-source projects - eases onboarding new contributors plays important role effective reuse repurposing software package (Aversano, Guardabascio, Tortorella 2017).\nDocumentation also important, often underdeveloped, aspect software development research settings (Geiger et al. 2018).\nUnderdeveloped documentation true software development,4 tedious time consuming tasks related creating useful documentation arguably difficult research settings development activities focus solving practical problems analyzing interpreting data (Ram et al. 2018).Documentation plays key role open-source projects - eases onboarding new contributors plays important role effective reuse repurposing software package (Aversano, Guardabascio, Tortorella 2017).\nDocumentation also important, often underdeveloped, aspect software development research settings (Geiger et al. 2018).\nUnderdeveloped documentation true software development,4 tedious time consuming tasks related creating useful documentation arguably difficult research settings development activities focus solving practical problems analyzing interpreting data (Ram et al. 2018).Maintenance also key element open-source development activities.\nMaintenance includes solving problems introduced operating system changes, code defects, evolving software meet emerging user requirements (Bourque Fairley 2004).\nOpen-source projects often face practical challenges attracting retaining maintainers.\nPrevious empirical studies show many projects GitHub, example, 1 maintainer (Eghbal 2016).\nRecent surveys developers report 86% projects maintainer (Coelho Valente 2017).Maintenance also key element open-source development activities.\nMaintenance includes solving problems introduced operating system changes, code defects, evolving software meet emerging user requirements (Bourque Fairley 2004).\nOpen-source projects often face practical challenges attracting retaining maintainers.\nPrevious empirical studies show many projects GitHub, example, 1 maintainer (Eghbal 2016).\nRecent surveys developers report 86% projects maintainer (Coelho Valente 2017).Licensing key feature defining open-source model software development.\n, developers often difficult time making licensing decisions without consultation legal experts.\nrecent survey makes point clear - 38% (n=375) experienced developers able select appropriate license given scenario asked identify appropriate license given software library (Almeida et al. 2017).\nDevelopers’ understanding interpret licensing restrictions also significantly decreased scenarios multiple licenses required.Licensing key feature defining open-source model software development.\n, developers often difficult time making licensing decisions without consultation legal experts.\nrecent survey makes point clear - 38% (n=375) experienced developers able select appropriate license given scenario asked identify appropriate license given software library (Almeida et al. 2017).\nDevelopers’ understanding interpret licensing restrictions also significantly decreased scenarios multiple licenses required.software projects potential broadly impact research communities, believe , minimum, greater support making decisions governance licensing, assistance creating useful documentation can attract new contributors ease maintenance tasks.\nRather simply creating guidebook articulating best practices adopting open-source models software development, meaningful intervention URSSI include close interaction service research software development projects seek route towards sustainability community engagement collaboration.","code":""},{"path":"Ch-Incubator.html","id":"incubators-background","chapter":"6 Incubator","heading":"6.3 Incubators background","text":"Incubators business accelerators common way venture capitalists support entrepreneurs “start-” companies attempting break new market.\ntypes incubator programs often provide mentorship well fiscal support founder product owner identify market fit, build expand software features, develop network interested stakeholders.\nSuccessful graduation exit start-incubator viewed securing funding launching new product (often culminating event founder / product owner “pitches” product potential investors).\nSuccessful start-incubators like Tech stars Y Combinator designed processes attracting, evaluating, helping promising software-based projects achieve financial success. Y combinator example successfully graduated 2000 companies collectively market valuation $155 billion.Open source incubators less common. Perhaps successful long running open-source incubator Apache Software Foundation, provides well documented process software projects wishing become part Apache Foundation (Schweik English 2012).\nSimilar start-incubator, Apache model incubation includes project mentor dedicated resources (infrastructure) projects develop releases software comply Apache Foundation’s standards.\nSuccess, graduation, Apache incubator thus dependent upon making two consecutive software releases evaluated, ultimately accepted Apache developers.conceptualization activities, notably community workshops, began formulate plan incubating research software projects focus specifically providing project developers time support improve sustainability software projects.\nresearch software incubator help projects identify make strategic decisions governance, assist research projects creating valuable documentation, strategically plan transitions individual small teams fostering community contributors maintainers.believe research software incubator features similar start-existing open-source incubators, also differ appreciable ways.First, intend successful graduation exit based solely funding code acceptance particular foundation structure.\nStart-incubators particular focus software development means company acquired receiving large investment future development.\nInstead focusing solely growth funding, see research software incubator model providing necessary time, mentorship, financial support help promising software project make decisions improve sustainability software project organization.\nSecond, importantly, start-incubators often provide financial support founders dedicate time attention project’s successful graduation. level financial support likely infeasible URSSI.Additionally, researchers difficult time dropping responsibilities institution focus solely single software project doesn’t potential significant financial return investment time effort.\nTherefore, believe important design research software sustainability incubator researcher can complete small amount effort mentorship URSSI community.\nexpect URSSI Incubator activities can project team’s focus.","code":""},{"path":"Ch-Incubator.html","id":"urssi-incubator","chapter":"6 Incubator","heading":"6.4 URSSI Incubator","text":"plan addresses problems related credit, reward, acknowledgement research software development activities Policy area.\nURSSI Incubator proposal aims provide multiple alternative pathways sustainability mentorship, project development advice guidance, strategic planning governance.\nseek help projects show promise solving general research problems mature, code project , ways valuable broad community potential users.\n, believe opportunity increase sustainability research software.broad goals URSSI Incubator program :Provide social technical infrastructure help research software projects become sustainable.\nprojects growing, support focus achieve growth manageable ways.\nprojects already community level contribution development, support help identify eliminate technical debt.Provide social technical infrastructure help research software projects become sustainable.\nprojects growing, support focus achieve growth manageable ways.\nprojects already community level contribution development, support help identify eliminate technical debt.Provide research software projects, various points development lifecycle, opportunity improve development organizational practices mature, develop, ways broadly valuable scholarship.Provide research software projects, various points development lifecycle, opportunity improve development organizational practices mature, develop, ways broadly valuable scholarship.Provide alternative academic technology transfer offices. believe emerging need guidance scholarly research software projects us focused commercialization transition open-source community models.\nTechnology transfer programs universities research funding agencies (e.g. -Corps, SBIR/STTR) well established successful helping entrepreneurially-focused software projects recognize execute viable business models. recent examples model focused transition pathways towards openness, particular focus open-source (e.g. Open@RIT program Rochester Institute Technology)\ncommercial transition pathway promoted software potential sustain fees licensing agreements.\nHowever, currently equivalent university guidance software projects like pursue non-commercial open source models sustainability.Provide alternative academic technology transfer offices. believe emerging need guidance scholarly research software projects us focused commercialization transition open-source community models.\nTechnology transfer programs universities research funding agencies (e.g. -Corps, SBIR/STTR) well established successful helping entrepreneurially-focused software projects recognize execute viable business models. recent examples model focused transition pathways towards openness, particular focus open-source (e.g. Open@RIT program Rochester Institute Technology)\ncommercial transition pathway promoted software potential sustain fees licensing agreements.\nHowever, currently equivalent university guidance software projects like pursue non-commercial open source models sustainability.Provide guidance mentorship best practices development, licensing, project coordination, advice funding projects wishing grow community software projects.\ncomponent Incubator draw upon expertise guidance developed URSSI’s Education Policy areas.Provide guidance mentorship best practices development, licensing, project coordination, advice funding projects wishing grow community software projects.\ncomponent Incubator draw upon expertise guidance developed URSSI’s Education Policy areas.","code":""},{"path":"Ch-Incubator.html","id":"incubator-resources","chapter":"6 Incubator","heading":"6.5 Incubator resources","text":"Personnel0.5 FTE Program Director shared Education + Teaching, Policy, Communications1 FTE Program Lead. individual charge coordinating application selection process, administering incubated projects, tracking success, coordinating Incubator Advisory Board (described detail ), acting URSSI Incubator project manager.Advisory Board (Volunteers). group senior researchers software engineers can offer strategic guidance Incubator program meeting targeted goals.Project Mentors (Volunteers + Graduated projects). Provide intensive, one one mentoring research software projects based existing expertise discipline, software language, stage development, criteria compatibility.Additional Resources may valuable incubator program succeed:Annual Incubator showcase, “demo day”, projects successfully graduated exited URSSI’s program. activity part larger URSSI annual event coordinates community dedicated software sustainability. Invitations event extended public private funders may see overlap programs pitches. can result matchmaking projects funders.Incubated project funding: Monetary (-kind service) award projects given budget advance goals period “incubation”. project receive similar allocation money. money similar SSI currently funds research fellows standard rate across period engagement. money discretionary project used travel, advocacy, website development, assistance writing documentation, etc.","code":""},{"path":"Ch-Incubator.html","id":"incubator-methods","chapter":"6 Incubator","heading":"6.6 Incubator methods","text":"URSSI’s Incubator program include process soliciting applications (call participation), selecting participants, cycle activities, standard successfully exiting graduating Incubator.\nincubator run semi-annual schedule new project cohorts can enter Incubator either January July year.\nfollowing subsections describe intended processes running stage Incubator.view Incubator single activity point--view impact, aimed research software sustainability people careers portions URSSI’s impact goals.","code":""},{"path":"Ch-Incubator.html","id":"project-solicitation-and-selection","chapter":"6 Incubator","heading":"6.6.1 Project solicitation and selection:","text":"URSSI Incubator solicit proposals projects three months advance formation new incubator cohort.\ncohort consist minimum five projects go incubator activities (described ) time.\ncohort model enables network effect allow URSSI scale incubator activities appropriate personnel resources available.incubator application ask project identify goals developing, growing, improving development practices, /maturing software product targeted way, well description limitations preventing project making software useful beyond small community.\napplication ask project leaders clearly articulate problem software trying solve provide evidence need generalizable solution serve broad community users potential attract new contributors, project contributing diversity.\nproject lead (defined ) also clearly state project seeking transition new model development.\nAcceptance URSSI Incubator require project seeking transition attempt growth per se.\ndesigning incubator accomodating software projects seek either shift change development models solidify establish best practices within existing model development.short, Incubator select projects based potential :Address demonstrated emerging need scholarshipOrganize development open-source equivalent modelAttract sustain developer communityContribute diversityBenefit network URSSI mentorsThe URSSI Incubator Selection Committee select projects semi-annual basis. Apache incubator model committee Incubator Project Management Committee.\ncommittee include mix URSSI staff including Program Lead (described ), URSSI steering committee / senior personnel members, selected external URSSI community members recognized leaders open-source research software well previous incubator participants.\nSelection committee members serve two year term, initial members serving either 1 3 year term guarantee continuity.\nway, 50% committee change given year.\nadvisory board also conduct incubator project evaluations (described ).time, may opportunity build cohorts around particular theme, point development, particular software language, even sponsorship particular funding agency.\nexample, URSSI might contracted Alfred P. Sloan Foundation run cohort projects funded potentially need guidance.\ninitial cohorts plan simply run open call applications select, stated , least five projects per year.","code":""},{"path":"Ch-Incubator.html","id":"project-entry","chapter":"6 Incubator","heading":"6.6.2 Project entry","text":"Selection participant URSSI incubator cohort require minimum:project lead responsible completing incubator activities timely manner managing funding allocated project.\nproject lead equivalent PI funded grant.\nproject lead responsible coordinating activities communicating URSSI incubator program administrator.Importantly, URSSI prescriptive can play role project lead.\nproject lead anyone - senior student worked code wants make project sustainable, PI co-PI grant (assuming PI stop researcher software developer), dedicated contributor project seeks permanent leadership role.\nmodel resemble NSF’s -Corps program, focuses transitioning promising technologies commercialization, instead focused transition sustainable open-source.\nsee project lead beneficial individual: recognition making URSSI Incubator program can badge merit helping secure promotion preparing lead future positions leadership.identified dedicated mentor (URSSI community) strategically offer advice guidance set activities described .\nmentor seen administrative support, instead trusted person project team can consult making decisions.\nApache incubation model, mentor role often described critical project’s ultimate success graduating incubation.identified dedicated mentor (URSSI community) strategically offer advice guidance set activities described .\nmentor seen administrative support, instead trusted person project team can consult making decisions.\nApache incubation model, mentor role often described critical project’s ultimate success graduating incubation.code repository openly accessible.\nrepository central hub documentation (e.g., contributor guidance, governance, licensing, etc.), code, reviews, issue tracking can take place.code repository openly accessible.\nrepository central hub documentation (e.g., contributor guidance, governance, licensing, etc.), code, reviews, issue tracking can take place.","code":""},{"path":"Ch-Incubator.html","id":"incubator-activities","chapter":"6 Incubator","heading":"6.6.3 Incubator activities","text":"projects join Incubator cohort, URSSI match project mentor.\nmentor help guide project Incubator activities described subsection.\nmentor evaluate offer feedback successful completion activity.URSSI Incubator activities likely consistent across cohort.\npreparation new cohort entering incubator, Program Lead publish URSSI Incubator Cookbook (similar Apache Model) describes activities, expectations project leaders, evaluation metrics.activities imagine consistent across cohort.\nactivities chronologically organized - project can work activities time period incubation.general depiction URSSI Incubator may organizedProject roles\nproject lead , guidance mentor program lead, establish formal definition roles project member play.\nproject already set predefined roles roles reviewed improvement, formally documented.Roles likely similar across projects, can leave room interpretation depending maturity project project’s stated goals.Formally defining roles within project meant ensure transparency, encourage participation, efficacy onboarding new explaining expectations contributing project. example, Node.JS defines three roles project’s governance:\nContributor individual creating commenting issue pull request\nCommitter subset contributors given write access repository\nTC (Technical Committee) group committers representing required technical expertise resolve rare disputes\nContributor individual creating commenting issue pull requestA Committer subset contributors given write access repositoryA TC (Technical Committee) group committers representing required technical expertise resolve rare disputesProject governance\naddition defining roles, project lead , guidance mentor Program Lead, establish model governing project clear expectations decisions made, establishing roadmap release schedule, adjudicating disputes may arise.\n(Note: URSSI develop guidance scratch, can modify adapt existing guides research software.addition, governance model also include:Code conduct - can follow existing best practice recommendationsProcess expectation citing software, acknowledging use, authoring papers related project, including credit given different project contributors. (Jupyter good model governance documentation)key component governance model selecting license dictates proper uses intellectual property project.Establishing best (good enough) software engineering practices\ncomponents incubator provided URSSI Education & Training area, include, limited activities :Version control managementTest coverage code integrationCode reviewsIssue templates trackingSoftware designRelease managementDocumentation\nIncubator activities around creating improving documentation related software project include guidance creating helpful ReadMe files (e.g. WriteTheDocs’ recommendations) readable readme documentation], project descriptions, creating style guides documentation, review documentation technical writer.Project funding & financial planning\nproject team develop policy accepting donations, managing funds, seeking grants, etc. project lead formalizes policy, added governance documentation.Project evaluation\nProjects , guidance program lead mentors, establish appropriate metrics track (e.g. following guidance open source handbook metrics).\nGuidance work informed metrics work URSSI engaged Policy area.\nmetrics include number potential evaluations:Discovery - CodeMeta appropriate metadata created repository discovered reusedUsage - formal citations, stars forks GitHub, etc.Contribution / MaintenanceRetention contributors maintainers","code":""},{"path":"Ch-Incubator.html","id":"project-graduation-or-exit","chapter":"6 Incubator","heading":"6.6.4 Project graduation or exit","text":"Upon completion activities described , project go Exit Evaluation. evaluation include four components:project publish software paper JOSS similar domain journal.project mentor provide structured feedback project lead, allow project lead reply address concerns raised feedbackThe Project Lead provide short recorded presentation review progress made goals stated project proposal, activities completed, demonstrate working software products evaluation.URSSI Incubator Selection Committee (described Selection subsection) convene annually review cohort’s materials - including JOSS publication, mentor review, project lead’s presentation. committee vote whether project graduate Incubator.Graduation Incubator send positive signal sustainability project, formal credentialing mechanism certification guaranteed sustainability.\nSimilar incubator programs (e.g. YC, Apache) graduation viewed significant achievement .","code":""},{"path":"Ch-Incubator.html","id":"relationship-to-funding-and-external-awards","chapter":"6 Incubator","heading":"6.6.5 Relationship to funding and external awards","text":"incubated project relationship external funding funders variety ways.\nsignificantly, view incubator potential matchmaker promising research software projects potential funders.\nThus, funders invited important participant Incubator showcase graduate events.Successfully graduating incubator program act informal signal funders project potential investment.\nscenario, completing URSSI Incubator act informal quality check.\nFunders greater assurance potential project succeed, funding new directions project, potentially funding institution group around project better support sustainability.","code":""},{"path":"Ch-Incubator.html","id":"incubator-metricsmilestones","chapter":"6 Incubator","heading":"6.7 Incubator metrics/milestones","text":"Incubated projects two periods evaluation.Short-term evaluation (1-2 years):Increase number mentions research projects GitHub, publications, software dependencies compared research software similar age.Increase number GitHub stars, forks, downloads (package managers) relative projects similar age gone incubation process.Improvement codebase, documentation, governance, licensing, strategic planning. improvement can defined project mentors set specific targets goals individual projects.Long-term evaluation (3-5 years):Number projects attract follow-fundingPersistence - measured number projects continue exist 5 years incubator graduation, software regular contributions updates repository, active maintainers identified part project different stages development.Attracted contributors - measured portion time looks commit history different individuals contributing repository.Returning Mentors - measured mentors graduated incubator return provide guidance help new incubator projects.Incubator program evaluation may include following:years 1-3 URSSI select least 15 projects (~ 5 per year) incubation. program evaluated based success projects’ graduating Incubator, whether projects meet short long term milestones (described ).Funders participation (.e., program attracts funded projects enter exit URSSI Incubator)Impacts:chapters, mapped activities chapter three portions URSSI’s intended impact,\ntreat incubator single activity.\n(complete table impacts URSSI activities can found Chapter 10 (Metrics Evaluation).)\nTable 6.1: Impact table\n","code":""},{"path":"Ch-Policy.html","id":"Ch-Policy","chapter":"7 Policy","heading":"7 Policy","text":"Policy area’s intent create enabling environment support people develop maintain research software, \nsupport research research software, ultimately increase science & research impact \nsoftware.Policy area’s activities divided two parts, research advocacy. Research collecting\nanalyzing data, advocacy dissemination research results way \nchanges practices.\nPolicy area focuses understanding advocating potential initiatives (actions, mandates, incentives, directives)\ndecision makers can take, sometimes thought leverage points,\nincluding strategies decisions invest. Policy happens multiple levels, including national,\nfunding agency, institution, research group.Changes Policy area seeks make include:funding agencies, direct funding software maintenance software sustainability activities\ncore part mission, e.g., NSF, includes program officers across directorates.funding agencies, direct funding software maintenance software sustainability activities\ncore part mission, e.g., NSF, includes program officers across directorates.universities academic fields, positions people developing maintaining research software\navailable, recognized, rewarded.universities academic fields, positions people developing maintaining research software\navailable, recognized, rewarded.publishing, support recognition software core part scholarly research norm.\n(includes recognition software valuable research community results ,\nprocesses exist evaluate software papers, expectations authorship software developers clear.)publishing, support recognition software core part scholarly research norm.\n(includes recognition software valuable research community results ,\nprocesses exist evaluate software papers, expectations authorship software developers clear.)industry, sharing best practices, coordinating efforts, contributing open source software\nprojects norm.industry, sharing best practices, coordinating efforts, contributing open source software\nprojects norm.Open source software recognized key element open science reproducibility.Open source software recognized key element open science reproducibility.Research software built maintained diverse inclusive group.Research software built maintained diverse inclusive group.","code":""},{"path":"Ch-Policy.html","id":"policy-resources","chapter":"7 Policy","heading":"7.1 Policy resources","text":"policy area require resources include funding people events travel.","code":""},{"path":"Ch-Policy.html","id":"people","chapter":"7 Policy","heading":"7.1.1 People","text":"policy area comprises:Director Policy, URSSI co-PI, leads overall Policy area, working \nPolicy Advisory Board Policy staff define execute policy research advocacy activities.Director Policy, URSSI co-PI, leads overall Policy area, working \nPolicy Advisory Board Policy staff define execute policy research advocacy activities.Policy Data Science Team: performs research finding, collecting, analyzing data,\naimed informing policy, policy\n. example, regard software usage metrics, empirical studies effective,\nteam recommend policy language based studies.\nIncludes possible assistant director, funded staff, URSSI fellows, community volunteers.Policy Data Science Team: performs research finding, collecting, analyzing data,\naimed informing policy, policy\n. example, regard software usage metrics, empirical studies effective,\nteam recommend policy language based studies.\nIncludes possible assistant director, funded staff, URSSI fellows, community volunteers.Policy Advocacy Team, focused policy development (use cases examples practices\neffective sustainability), ultimately used presenting actionable ways\nsupport research software institutions, possibly integrating building upon data science\nteams findings. team focuses planning advocacy ,\nunderstanding different stakeholders, building roadmap effectively advocate\n(within universities, foundations, industry, national labs, etc.)\nIncludes possible assistant director, funded staff, URSSI fellows, community volunteers.Policy Advocacy Team, focused policy development (use cases examples practices\neffective sustainability), ultimately used presenting actionable ways\nsupport research software institutions, possibly integrating building upon data science\nteams findings. team focuses planning advocacy ,\nunderstanding different stakeholders, building roadmap effectively advocate\n(within universities, foundations, industry, national labs, etc.)\nIncludes possible assistant director, funded staff, URSSI fellows, community volunteers.Policy advisory board (appointed volunteers) provide advice potential policy area\nresearch questions advocacy activities.Policy advisory board (appointed volunteers) provide advice potential policy area\nresearch questions advocacy activities.Funding personnel:3 FTEs, divided across possibly part-time Assistant Directors Policy Data Science Policy Advocacy,\nPolicy Data Science Team (potentially postdoc), Policy Advocacy Team.\nDirector Policy might also act one Assistant Directors, depending person’s background.Additional team members, funded policy area:Director Policy, URSSI co-PI, funded URSSI top levelPolicy Advisory Group (appointed volunteers)URSSI fellows, working Policy Data Science Team Policy Advocacy Team\n(Fellows program run URSSI Community area; policy fellows might\nfunded policy area needed)\n(Fellows program run URSSI Community area; policy fellows might\nfunded policy area needed)community volunteers, Policy Data Science Team Policy Advocacy Team","code":""},{"path":"Ch-Policy.html","id":"additional-resources","chapter":"7 Policy","heading":"7.1.2 Additional resources","text":"Additional resources may needed research group data collection, management, analysis, etc.,\nadvocacy team dissemination materials community organization support.\nteams may need additional resources producing materials, including graphic design, copy editing, etc).\nAmount TODO TBD","code":""},{"path":"Ch-Policy.html","id":"events-travel","chapter":"7 Policy","heading":"7.1.3 Events & travel","text":"Funding workshops: TODO: TBDPotentially including policy conference / workshop(s) akin Aspen Institute CODATA - $370k.\nalso part annual URSSI event. events might also low/cost, held fully virtually.Funding travel/speaking: TODO: TBDAs part advocacy activities, URSSI personnel discuss findings recommendations.","code":""},{"path":"Ch-Policy.html","id":"flexibility","chapter":"7 Policy","heading":"7.1.4 Flexibility","text":"less budget available, cut back workshop fundingIf budget available, :Expand policy program summer program undergraduate graduate students focused\nsoftware / science policy (e.g., NSF REU site something like Google Summer Code policy / law students)Expand policy program summer program undergraduate graduate students focused\nsoftware / science policy (e.g., NSF REU site something like Google Summer Code policy / law students)Hire communication staff outreach engagement around policy topics (dedicated\nexpertise policy opposed general outreach)Hire communication staff outreach engagement around policy topics (dedicated\nexpertise policy opposed general outreach)","code":""},{"path":"Ch-Policy.html","id":"policy-methods","chapter":"7 Policy","heading":"7.2 Policy methods","text":"Initial activities planned around initial set aims articulated , additional\naims also suggested. URSSI leadership group regularly review suggestions\nnew aims, determine rough desired level activity across aims.policy team develop scope activities match desired levels, review\nPolicy Advisory Board, also able suggest adding removing aims\nback leadership group.policy team also maintain listing active, planned, potential activities \nmapping aim. Activities split , successful, likely\nlead significant changes 1-2 years, 3-5 years, longer-term, initial goal \napplying 50% resources 1-2 year activities, 40% 3-5 year activities, 10% \nlonger-term activities.","code":""},{"path":"Ch-Policy.html","id":"aims","chapter":"7 Policy","heading":"7.2.1 Aims","text":"Initially, policy area work address following set aims:Establish career paths (including titles evaluation criteria hiring promotion).addresses Changes 2, 5 (list changes start chapter)aims primarily people careers portion URSSI’s impact goal, secondarily research software ecosystem portionImprove measurement impact individuals, especially activities inherently\ncollaborative like software development.addresses Changes 1, 2, 3aims primarily people careers portion URSSI’s impact goal, secondarily research software ecosystem portionIncentivizes contributions public goods / infrastructure within academic credit modeladdresses Changes 1, 3, 5aims primarily research software sustainability portion URSSI’s impact goal, secondarily people careers research software ecosystem portionsDisentangle software quality software impact.addresses Changes 1, 4, 5aims research software ecosystem portion URSSI’s impact goalBetter recognize value importance software.addresses Changes 1, 2, 3, 5aims research software ecosystem portion URSSI’s impact goalImprove/increase funding opportunities stable funding maintenance software \nimportant doesn’t generic market /isn’t considered novel eyes \naverage funder/reviewer. Today “lumpy” project funding (projects \ncompetitively funded fixed periods, often gaps funded project periods) means\nmaintenance/sustainability can’t reliably folded project costs.addresses Changes 1, 4, 5aims primarily research software ecosystem portion URSSI’s impact goal, secondarily research software sustainability portionIncrease diversity development maintenance community achieve diversity overall US population.addresses Change 6aims primarily people careers portion URSSI’s impact goal, secondarily research software ecosystem portion","code":""},{"path":"Ch-Policy.html","id":"partners-1","chapter":"7 Policy","heading":"7.2.2 Partners","text":"Policy area seek work partners listed “Partners” section Chapter 3, specifically including:NSF SI2/CSSI Institutes & Centers Excellence\n(e.g. SGCI, MolSSI, IRIS-HEP),\nResearch Software Alliance,\nSoftware Sustainability Institute,\nUS-RSE Association,\n(UK) RSE Society,\nAcademic Data Science Alliance,\nResearch Data Alliance,\nAmerican Association Advancement Science (AAAS) Science & Technology Policy Fellows,\nCaRCC,\nOECD,\nprojects organizations also seek define address overlapping aims.Policy area needs build relationships following groups organizations, \nwork closely , particularly policy activities.Institutional research leaders academic national laboratory community, \nVCRs, CTOs/CIOs, can help URSSI penetrate various institutions disciplinesInstitutional research leaders academic national laboratory community, \nVCRs, CTOs/CIOs, can help URSSI penetrate various institutions disciplinesRepresentatives professional academic associationsRepresentatives professional academic associationsRepresentatives industry (including already invested sold OSS, well \nskeptically interested)Representatives industry (including already invested sold OSS, well \nskeptically interested)Representatives Open Source communities, particularly already effective working scaleRepresentatives Open Source communities, particularly already effective working scalePeople working science policy, AAAS National Academies (particular, AAAS policy fellows might interested helping time-constrained activities match purpose period fellowship)People working science policy, AAAS National Academies (particular, AAAS policy fellows might interested helping time-constrained activities match purpose period fellowship)Representatives organizations companies serving OSS RSE communities\n(e.g. NumFOCUS, Code Science & Society, GitHub, Code Ocean)Representatives organizations companies serving OSS RSE communities\n(e.g. NumFOCUS, Code Science & Society, GitHub, Code Ocean)Representatives organizations represent research support roles\n(e.g., librarians, data stewards, RSEs), work together promote rolesRepresentatives organizations represent research support roles\n(e.g., librarians, data stewards, RSEs), work together promote rolesRepresentatives organizations focus diversity inclusion academia,\nencourage include software-focused roles possibleRepresentatives organizations focus diversity inclusion academia,\nencourage include software-focused roles possiblePeople European Commission regarding European Open Science Cloud (EOSC), etc.People European Commission regarding European Open Science Cloud (EOSC), etc.Representatives organizations like Research Data Alliance FORCE11Representatives organizations like Research Data Alliance FORCE11","code":""},{"path":"Ch-Policy.html","id":"planned-activity-pool","chapter":"7 Policy","heading":"7.2.3 Planned Activity Pool","text":"initial list activities URSSI maintain, choose . specific\nactivities chosen start depend funding level URSSI. activities\ninclude amount effort (generally person-months) needed accomplish .\nNote activities (items ) include\nraising additional funds activities - fund raising part activity. \nactivities (“Unplanned Activity Pool” subsection) tracked beyond scope URSSI, \nlikely activities others might perform, potentially coordination URSSI.Activities divided two types:Policy Research Activities. activities involve research, gathering analyzing evidence data.Policy Research Activities. activities involve research, gathering analyzing evidence data.Policy Advocacy Activities. activities focus advocacy. generally depend policy research previously\ngathered evidence data.Policy Advocacy Activities. activities focus advocacy. generally depend policy research previously\ngathered evidence data.High-level activities include:Maintaining list potential activities prioritizing , including getting inputs\noverall community. inputs collected recorded members \nproject interactions community, well community members, via tagged\nGitHub issues. Community members able see list react +1 issues\nthink important, URSSI use reactions element prioritization. (ongoing)Maintaining list potential activities prioritizing , including getting inputs\noverall community. inputs collected recorded members \nproject interactions community, well community members, via tagged\nGitHub issues. Community members able see list react +1 issues\nthink important, URSSI use reactions element prioritization. (ongoing)Tracking completed activities consequences (ongoing)Tracking completed activities consequences (ongoing)Collecting examples good bad policy, structures, interventions industry \ndisciplines (potential fellow project)Collecting examples good bad policy, structures, interventions industry \ndisciplines (potential fellow project)Developing advocacy roadmap effectively advocate (universities, foundations,\nindustry, national labs) (policy person & advisory committee, spread 3 months)Developing advocacy roadmap effectively advocate (universities, foundations,\nindustry, national labs) (policy person & advisory committee, spread 3 months)Additionally, plan proposal (doesn’t budget envelope working fit ,\nresponding specific solicitation, potential funder’s goals unclear) \nconsidered priorities activities. Initial activities mostly focus research, advocacy\nactivities follow based results lessons research activities. addition,\nmentioned , final prioritization also need inputs Policy Advisory Board URSSI\nleadership team. Activities preceding “(+)” considered higher priority activities.","code":""},{"path":"Ch-Policy.html","id":"career-path-activities-aim-1","chapter":"7 Policy","heading":"7.2.3.1 Career Path Activities (Aim 1)","text":"Faculty career path policy research activities:Study tenure guidance policies, find/document ways software work measured\nrecognized. Publish examples successes.\n(ADSA interested partnering ; ADSA Career Development Network mostly faculty facing exactly challenges.\nAdditionally, RDA processing developing Open Science Registry5\ncollaborative platform share intention outcomes pilots\ninitiatives specifically address academic reward system, outcome \nEuropean Union Open Source Policy Platform (OSPP) final report (Mendez et al. 2020).) (2 months)Faculty career path policy advocacy activities:Promote best practices recognizing measuring software work hiring practices \ntenure letters via sample guidance documents committees, faculty, \nletter--reference authors. (needs focused workshop follow-, ~3 months year)Promote best practices recognizing measuring software work hiring practices \ntenure letters via sample guidance documents committees, faculty, \nletter--reference authors. (needs focused workshop follow-, ~3 months year)Commission NAS report (similar one Open Source Software Policy Options NASA\nEarth Space Sciences) career pathways/progression\nacademia. need define, raise funds \noutside URSSI (~$1m), work NAS define charge contract study.\n(4 months 2.5 years, overlapping related item staff career path policy advocacy activities)Commission NAS report (similar one Open Source Software Policy Options NASA\nEarth Space Sciences) career pathways/progression\nacademia. need define, raise funds \noutside URSSI (~$1m), work NAS define charge contract study.\n(4 months 2.5 years, overlapping related item staff career path policy advocacy activities)Staff career path policy research activities:(activities coordinated US-RSE national RSE organizations. Additionally, information already exists can mined, international national RSE surveys (Philippe et al. 2019), …)(+) Document existing (known successful/viable, known failures) career paths individuals\ncreating research software (2 months)(+) Document existing (known successful/viable, known failures) career paths individuals\ncreating research software (2 months)(+) Examine document industry career paths vs. national laboratory career paths vs. academic career paths (1 month)(+) Examine document industry career paths vs. national laboratory career paths vs. academic career paths (1 month)(+) Create maintain mailing list interested career paths (mailing list \nsupported Community area) (ongoing, low level effort)(+) Create maintain mailing list interested career paths (mailing list \nsupported Community area) (ongoing, low level effort)Create clearinghouse job descriptions criteria performance assessment; distill\ndesign patterns different categories different roles. also include documenting\nsalary levels different job descriptions, connecting job descriptions learning\nmodules necessary jobs (3-4 months, plus ongoing maintenance)Create clearinghouse job descriptions criteria performance assessment; distill\ndesign patterns different categories different roles. also include documenting\nsalary levels different job descriptions, connecting job descriptions learning\nmodules necessary jobs (3-4 months, plus ongoing maintenance)Examine salaries RSEs compare researchers? (needs follow clearinghouse, 1 month)Examine salaries RSEs compare researchers? (needs follow clearinghouse, 1 month)Staff career path policy advocacy activities:(+) Help start organizational “chapters” research software developers (perhaps called URSSI chapters?) existing\nuniversities / societies / organizations; create handbook, tools, best practices support\nlocal organizers; assign URSSI “coordinator” / community manager. chapters :\ntalk training, consulting problems, host hacky hours, study groups, software days,\ncome together larger event, perhaps regional workshop URSSI-wide conference. Overall, \nhelps / grows / establishes community (make connections help chapter members\nmeet right person next career moves).\nDone URSSI Community area; Policy part (1 month) creating materials,\ne.g., guidance set chapter, align local activities, run .\nAlso coordinated US-RSE, regional US-RSE groups might overlap regional URSSI chapters.\n(+) Help start organizational “chapters” research software developers (perhaps called URSSI chapters?) existing\nuniversities / societies / organizations; create handbook, tools, best practices support\nlocal organizers; assign URSSI “coordinator” / community manager. chapters :\ntalk training, consulting problems, host hacky hours, study groups, software days,\ncome together larger event, perhaps regional workshop URSSI-wide conference. Overall, \nhelps / grows / establishes community (make connections help chapter members\nmeet right person next career moves).Done URSSI Community area; Policy part (1 month) creating materials,\ne.g., guidance set chapter, align local activities, run .Done URSSI Community area; Policy part (1 month) creating materials,\ne.g., guidance set chapter, align local activities, run .Also coordinated US-RSE, regional US-RSE groups might overlap regional URSSI chapters.Also coordinated US-RSE, regional US-RSE groups might overlap regional URSSI chapters.Work promote support establishment RSE capabilities universities around US.\nProvide advice talk university administrators (ones) , etc. (1 month,\njointly US-RSE)Work promote support establishment RSE capabilities universities around US.\nProvide advice talk university administrators (ones) , etc. (1 month,\njointly US-RSE)Provide examples language universities can use HR/job ads RSE positions\n(1 month, jointly US-RSE)Provide examples language universities can use HR/job ads RSE positions\n(1 month, jointly US-RSE)Commission NAS report (similar one Open Source Software Policy Options NASA\nEarth Space Sciences) \n{career pathways/progression academia, recognition software, evaluation software developers,\ninclusion software hiring promotion} need define, raise funds \noutside URSSI (~$1m), work NAS define charge contract study.\n(4 months 2.5 years, overlapping related item faculty career path policy advocacy activities)Commission NAS report (similar one Open Source Software Policy Options NASA\nEarth Space Sciences) \n{career pathways/progression academia, recognition software, evaluation software developers,\ninclusion software hiring promotion} need define, raise funds \noutside URSSI (~$1m), work NAS define charge contract study.\n(4 months 2.5 years, overlapping related item faculty career path policy advocacy activities)","code":""},{"path":"Ch-Policy.html","id":"the-impact-of-individuals-aim-2","chapter":"7 Policy","heading":"7.2.3.2 The impact of individuals (Aim 2)","text":"impact individuals policy research activities:Identify factors (manual, evaluations, automated, crawling repos) \npart impact publicize . known factors investigate include quantifying code\ncontributions, code review, mentoring. Determine good practices (formatting housing \ninformation factors) factors discoverable /queryable.\n(initial effort 6 months make progress better scope additional work performed.)Measuring impact individuals policy advocacy activities:Create champions (e.g. librarians) promote educate individuals projects \ngood practices, working best practices activity Community area.Create champions (e.g. librarians) promote educate individuals projects \ngood practices, working best practices activity Community area.Help individuals understand can best promote (e.g., claim software works \nORCID), working best practices activity Community area.Help individuals understand can best promote (e.g., claim software works \nORCID), working best practices activity Community area.","code":""},{"path":"Ch-Policy.html","id":"incentivize-contributions-to-public-software-aim-3","chapter":"7 Policy","heading":"7.2.3.3 Incentivize contributions to public software (Aim 3)","text":"Incentivize contributions public software policy research activities:Gather data/examples show contributions public projects increase citation\ncount regular metrics (1 month)Gather data/examples show contributions public projects increase citation\ncount regular metrics (1 month)(+) Gather examples successful use individual contributions public goods/infrastructure\ngain academic promotion (1 month 3-6 months)(+) Gather examples successful use individual contributions public goods/infrastructure\ngain academic promotion (1 month 3-6 months)(+) Use regular surveys better understand people don’t contribute; get data \nunderstand value public goods community (1 month 3-6 months year)(+) Use regular surveys better understand people don’t contribute; get data \nunderstand value public goods community (1 month 3-6 months year)Determine way make easy scientific communities peer-review public-good software\n(contributions software), idea peer-review considered mark \nquality. done starting new journal working existing journals conferences,\nvia existing community organizations software-focused organizations (ongoing, well-scoped)Determine way make easy scientific communities peer-review public-good software\n(contributions software), idea peer-review considered mark \nquality. done starting new journal working existing journals conferences,\nvia existing community organizations software-focused organizations (ongoing, well-scoped)Research counter idea publishing small set “highest impact” journals \nkey, expose actual impact work instead (work scholcom community, use \ndone, maybe adapt work software - maybe 2 months start)Research counter idea publishing small set “highest impact” journals \nkey, expose actual impact work instead (work scholcom community, use \ndone, maybe adapt work software - maybe 2 months start)Incentivize contributions public software policy advocacy activities:Work persuade high-profile individuals make public contributions public projectsWork persuade high-profile individuals make public contributions public projects(+) Share examples successful use individual contributions public goods/infrastructure\ngain academic promotion, produce templates, advocacy toolkits examples help others\nmake case. Similarly, work persuade people contributing projects \nincrease products within normally accepted reward system (e.g., get collaborators\npapers; increase opportunities meet/work new/old collaborators; build social\nconnections/network) (ongoing, well-scoped)(+) Share examples successful use individual contributions public goods/infrastructure\ngain academic promotion, produce templates, advocacy toolkits examples help others\nmake case. Similarly, work persuade people contributing projects \nincrease products within normally accepted reward system (e.g., get collaborators\npapers; increase opportunities meet/work new/old collaborators; build social\nconnections/network) (ongoing, well-scoped)(+) Show can participate public goods / infrastructure projects (e.g., \nstructure issue, write first PR), collaboratively best practices activity \nURSSI Community area (low initial effort, low ongoing effort maintain)(+) Show can participate public goods / infrastructure projects (e.g., \nstructure issue, write first PR), collaboratively best practices activity \nURSSI Community area (low initial effort, low ongoing effort maintain)Produce templates based successful use individual contributions public\ngoods/infrastructure gain academic promotion, advocacy toolkits, examples help\nothers make case (1 month)Produce templates based successful use individual contributions public\ngoods/infrastructure gain academic promotion, advocacy toolkits, examples help\nothers make case (1 month)Reframe contributions first class research products / objects (.e., explain building\nbest software science, ’s discovery creation). order ,\namplify existing efforts build taxonomy contributions make clear \ncontributions , encourage people claim/talk /take pride contributions;\nwork publishers highlight contributions people make . Also advocate\n(materials, webinars, ambassadors, etc.) within academic communities (deans, faculty, science\nsocieties, review panels, funders) public software contributions research (also \ndone cross-disciplinary respected groups, national academies)Reframe contributions first class research products / objects (.e., explain building\nbest software science, ’s discovery creation). order ,\namplify existing efforts build taxonomy contributions make clear \ncontributions , encourage people claim/talk /take pride contributions;\nwork publishers highlight contributions people make . Also advocate\n(materials, webinars, ambassadors, etc.) within academic communities (deans, faculty, science\nsocieties, review panels, funders) public software contributions research (also \ndone cross-disciplinary respected groups, national academies)(+) Work revise funder policies ensure reviewers prioritize grant proposals reuse,\nbuild-upon contribute back maintenance public infrastructure(+) Work revise funder policies ensure reviewers prioritize grant proposals reuse,\nbuild-upon contribute back maintenance public infrastructureCreate high-profile equivalent “highest impact” journal software data work - publication\nseen accomplishment indicating significance softwareCreate high-profile equivalent “highest impact” journal software data work - publication\nseen accomplishment indicating significance software","code":""},{"path":"Ch-Policy.html","id":"disentangle-software-quality-and-software-impact-aim-4","chapter":"7 Policy","heading":"7.2.3.4 Disentangle software quality and software impact (Aim 4)","text":"Disentangle software quality software impact policy research activities:Create checklists/review guidelines different levels peer-review software; can \ntiered, issue stars use another rating system; leverage information already available\njournals resources. (1 week)Disentangle software quality software impact policy advocacy activities:Disseminate peer-review software checklists/review guidelines publishers organizations\nreview software, via working group. (2 months 2 years)","code":""},{"path":"Ch-Policy.html","id":"better-recognize-the-value-and-importance-of-software-aim-5","chapter":"7 Policy","heading":"7.2.3.5 Better recognize the value and importance of software (Aim 5)","text":"Recognize value importance software policy research activities:(+) Find science/discovery cases software particularly fundamental, particularly digging\nsoftware generally well-known (2 months 6 months)(+) Find science/discovery cases software particularly fundamental, particularly digging\nsoftware generally well-known (2 months 6 months)(+) Research deliver case studies sustainable software value, e.g., NetCDF, HDF5, DS9 image viewer,\nGCM model(s). much money invested projects projects return value \ncommunity? Examples value include: number research projects taking advantage \nsolutions, amount saved reinvent technologies. (6--12-month fellow project)(+) Research deliver case studies sustainable software value, e.g., NetCDF, HDF5, DS9 image viewer,\nGCM model(s). much money invested projects projects return value \ncommunity? Examples value include: number research projects taking advantage \nsolutions, amount saved reinvent technologies. (6--12-month fellow project)Quantify money implicitly funded maintenance sustainability, saved\nlost shift open source (e.g., funds spent one-software rather\nmaintaining existing open source software, investment software maintenance\nsaved funds spent one-software) (6-month fellow project)Quantify money implicitly funded maintenance sustainability, saved\nlost shift open source (e.g., funds spent one-software rather\nmaintaining existing open source software, investment software maintenance\nsaved funds spent one-software) (6-month fellow project)Calculate bus factor bunch key software disciplines (partner CHAOSS, perhaps\n6-month fellow project)Calculate bus factor bunch key software disciplines (partner CHAOSS, perhaps\n6-month fellow project)Document maintenance funding critical packages several disciplines, e.g. IRAF astronomy\n(6-month fellow project)Document maintenance funding critical packages several disciplines, e.g. IRAF astronomy\n(6-month fellow project)Recognize value importance software policy advocacy activities:(+) Publicize science/discovery cases software particularly fundamental, focusing \ndemonstrating impact software (1 week/year, ongoing)(+) Publicize science/discovery cases software particularly fundamental, focusing \ndemonstrating impact software (1 week/year, ongoing)(+) Raise awareness software needs maintained (low level, ongoing)(+) Raise awareness software needs maintained (low level, ongoing)","code":""},{"path":"Ch-Policy.html","id":"funding-opportunities-for-software-maintenance-aim-6","chapter":"7 Policy","heading":"7.2.3.6 Funding opportunities for software maintenance (Aim 6)","text":"Funding opportunities software maintenance policy research activities:(+) Review landscape funding opportunities software maintenance (gather data )\nprovide public summary, keep summary --date. (jointly done ReSA? CZI EOSS?)\n(1 month ongoing work)(+) Review landscape funding opportunities software maintenance (gather data )\nprovide public summary, keep summary --date. (jointly done ReSA? CZI EOSS?)\n(1 month ongoing work)Gather case studies successful commercialization open source projects encourage \nresearch community understand make use (2 months)Gather case studies successful commercialization open source projects encourage \nresearch community understand make use (2 months)Review scope maintenance needs various research disciplines. Determine order \nmagnitude maintenance backlog research software (CHAOSS others, unscoped)Review scope maintenance needs various research disciplines. Determine order \nmagnitude maintenance backlog research software (CHAOSS others, unscoped)Funding opportunities software maintenance policy advocacy activities:Encourage funding agencies require software management/maintenance plans (SMPs).\nUse couple idea maintenance idea development, make clear\njust development without maintenance doesn’t work. Note leads \nquestions maintenance stopped, ’s also unclear long-term\nmaintenance supported (since grants definition time-limited).\n(1-2 months/year ongoing, work ReSA)Encourage funding agencies require software management/maintenance plans (SMPs).\nUse couple idea maintenance idea development, make clear\njust development without maintenance doesn’t work. Note leads \nquestions maintenance stopped, ’s also unclear long-term\nmaintenance supported (since grants definition time-limited).\n(1-2 months/year ongoing, work ReSA)Advocate funding agencies provide funding pool short-term maintenance grants\nexisting projects (e.g. CZI’s EOSS program). (1-2 months/year)Advocate funding agencies provide funding pool short-term maintenance grants\nexisting projects (e.g. CZI’s EOSS program). (1-2 months/year)(+) Advocate universities support maintenance software developed university\npart research impact (possibly technology transfer), part including software\nhighlight success stories campaign paid , including university RSE contributions,\nusing collectively demonstrate impact specific university-funded activities,\nencourage universities step . (2 months/year multiple years)(+) Advocate universities support maintenance software developed university\npart research impact (possibly technology transfer), part including software\nhighlight success stories campaign paid , including university RSE contributions,\nusing collectively demonstrate impact specific university-funded activities,\nencourage universities step . (2 months/year multiple years)Encourage companies provide funds channel funds maintaining research\nsoftware projects, perhaps via review process reviewers academic software\nprojects companies. done jointly NumFOCUS similar organization,\nsimilar Tidelift (1-2 months/year)Encourage companies provide funds channel funds maintaining research\nsoftware projects, perhaps via review process reviewers academic software\nprojects companies. done jointly NumFOCUS similar organization,\nsimilar Tidelift (1-2 months/year)","code":""},{"path":"Ch-Policy.html","id":"increase-diversity-of-software-community-aim-7","chapter":"7 Policy","heading":"7.2.3.7 Increase diversity of software community (Aim 7)","text":"Diversity inclusion policy research activities:(+) Survey US research software projects examine diversity leadership contributors (3 months)(+) Survey US research software projects examine diversity leadership contributors (3 months)Study/survey contributors make single contribution make ongoing contributions\nvs membership underrepresented groups (3 months)Study/survey contributors make single contribution make ongoing contributions\nvs membership underrepresented groups (3 months)(+) Contribute DISCOVER event cookbook, working \nNumFOCUS’s DISC(+) Contribute DISCOVER event cookbook, working \nNumFOCUS’s DISCOther items CS&S NumFOCUS’s DISC,\nexample, creating cookbook aimed projectsOther items CS&S NumFOCUS’s DISC,\nexample, creating cookbook aimed projectsDiversity inclusion advocacy activities:(+) Advertise DISCOVER event cookbook, working \nNumFOCUS’s DISC(+) Advertise DISCOVER event cookbook, working \nNumFOCUS’s DISC(+) items CS&S NumFOCUS’s DISC,\nadvertising cookbook aimed projects(+) items CS&S NumFOCUS’s DISC,\nadvertising cookbook aimed projectsReach projects encourage mentor Outreachy interns\nprograms (e.g.,\nLinux Foundation diversity programs,\nhttps://opensourcediversity.org/#programs), work Google Summer Code, maybe\ninclude matchmaking. Consider URSSI organization applies set \nprograms behalf set software projects.Reach projects encourage mentor Outreachy interns\nprograms (e.g.,\nLinux Foundation diversity programs,\nhttps://opensourcediversity.org/#programs), work Google Summer Code, maybe\ninclude matchmaking. Consider URSSI organization applies set \nprograms behalf set software projects.Build community mentoring program focused diversityBuild community mentoring program focused diversityWork RLadies, Women Data Science, etc.Work RLadies, Women Data Science, etc.","code":""},{"path":"Ch-Policy.html","id":"general-advocacy-activities-not-mapped-to-specific-aims","chapter":"7 Policy","heading":"7.2.3.8 General advocacy activities (not mapped to specific Aims)","text":"Work REU6\nprograms? – set network software-focused REUs? focus software\naspects REUs? (provide training, guidance, language proposals, …)\n(2 month start + ongoing)Work REU6\nprograms? – set network software-focused REUs? focus software\naspects REUs? (provide training, guidance, language proposals, …)\n(2 month start + ongoing)Foster competition universities (administrations), done \nSSI UK create RSE groups, :\nHighlighting software work (including internal investments sustain projects \nuniversity sees important prestigious) successes (including funded projects \nfocus software) universities.\nRanking contributions universities software structure software developers,\npublicizing ranking (maybe US-RSE) – via newsletter, blogs, press releases\n(pontentally run least coordinated URSSI community area). based \npart information submitted software community, e.g. Laura Noren’s Brad Stenger’s Data\nScience Community Newsletter. rankings information also bi-directionally shared\nReSA.\nFoster competition universities (administrations), done \nSSI UK create RSE groups, :Highlighting software work (including internal investments sustain projects \nuniversity sees important prestigious) successes (including funded projects \nfocus software) universities.Highlighting software work (including internal investments sustain projects \nuniversity sees important prestigious) successes (including funded projects \nfocus software) universities.Ranking contributions universities software structure software developers,\npublicizing ranking (maybe US-RSE) – via newsletter, blogs, press releases\n(pontentally run least coordinated URSSI community area). based \npart information submitted software community, e.g. Laura Noren’s Brad Stenger’s Data\nScience Community Newsletter. rankings information also bi-directionally shared\nReSA.Ranking contributions universities software structure software developers,\npublicizing ranking (maybe US-RSE) – via newsletter, blogs, press releases\n(pontentally run least coordinated URSSI community area). based \npart information submitted software community, e.g. Laura Noren’s Brad Stenger’s Data\nScience Community Newsletter. rankings information also bi-directionally shared\nReSA.Work citation credit (get publishers recognize highlight software \nresearch) (FORCE11 others) (minor support activities)Work citation credit (get publishers recognize highlight software \nresearch) (FORCE11 others) (minor support activities)Promote software management plans software sustainability plans part proposals\n(3 months year, bringing together community volunteers, work ReSA RDA)Promote software management plans software sustainability plans part proposals\n(3 months year, bringing together community volunteers, work ReSA RDA)(+) Develop set options institutions can support research software (e.g., RSE groups,\nRSE careers, tenure promotion guidelines) disseminate (US-RSE, starting year 1)(+) Develop set options institutions can support research software (e.g., RSE groups,\nRSE careers, tenure promotion guidelines) disseminate (US-RSE, starting year 1)(+) Create operate professional award program (working established organizations)\ne.g., ESA URSSI software award. URSSI software contribution research awards: URSSI/ESA\n(e.g. John Chambers software award stats association). $10k funding available URSSI\n(eventually domain societies asked partially fund awards). URSSI need \ndefine categories, criteria/heuristics, etc. awards beforehand. find people\n(either staff community volunteers) run awards processes (accept nominations, make decisions)\n(2 weeks/year starting year 2)(+) Create operate professional award program (working established organizations)\ne.g., ESA URSSI software award. URSSI software contribution research awards: URSSI/ESA\n(e.g. John Chambers software award stats association). $10k funding available URSSI\n(eventually domain societies asked partially fund awards). URSSI need \ndefine categories, criteria/heuristics, etc. awards beforehand. find people\n(either staff community volunteers) run awards processes (accept nominations, make decisions)\n(2 weeks/year starting year 2)(+) Work NumFOCUS provide guidance projects work (including obtaining\nfunding ) industry (sharing material incubator area)(+) Work NumFOCUS provide guidance projects work (including obtaining\nfunding ) industry (sharing material incubator area)(+) Offer training software development proposals (point others )\nDevelop disseminate best practices software development proposals (NumFOCUS \nCapentries)\nTraining/materials asynchronous, -person NSF program officers well, \nwilling \n(+) Offer training software development proposals (point others )Develop disseminate best practices software development proposals (NumFOCUS \nCapentries)Develop disseminate best practices software development proposals (NumFOCUS \nCapentries)Training/materials asynchronous, -person NSF program officers well, \nwilling soTraining/materials asynchronous, -person NSF program officers well, \nwilling soLicensing (partnership OSI, Creative Commons, others)\nProvide (pointers ) guidance licenses copyright research software (little work,\npartner OSI point existing best practices)\nLicensing (partnership OSI, Creative Commons, others)Provide (pointers ) guidance licenses copyright research software (little work,\npartner OSI point existing best practices)","code":""},{"path":"Ch-Policy.html","id":"unplanned-activity-pool","chapter":"7 Policy","heading":"7.2.3.9 Unplanned Activity Pool","text":"activities listed support URSSI beyond scope URSSI.\nlisted provide ideas others, URSSI potentially willing encourage\nsupport , likely without resources.","code":""},{"path":"Ch-Policy.html","id":"staff-career-path-policy-research-activities-aim-1","chapter":"7 Policy","heading":"7.2.3.9.1 Staff career path policy research activities (Aim 1)","text":"Comparative study research success universities core RSE groups vs without.\n(potential research topic, started URSSI)","code":""},{"path":"Ch-Policy.html","id":"incentivize-contributions-to-public-software-policy-advocacy-activities-aim-3","chapter":"7 Policy","heading":"7.2.3.9.2 Incentivize contributions to public software policy advocacy activities (Aim 3)","text":"Run help desk week -line people running difficulties making contributions need help","code":""},{"path":"Ch-Policy.html","id":"disentangle-software-quality-and-software-impact-policy-research-activities-aim-4","chapter":"7 Policy","heading":"7.2.3.9.3 Disentangle software quality and software impact policy research activities (Aim 4)","text":"Define software quality means.Define software quality means.Define software impact means measure . Impact can looked many\nways: scientific, economic, societal, etc.Define software impact means measure . Impact can looked many\nways: scientific, economic, societal, etc.Define know software impactful (signals high impact)Define know software impactful (signals high impact)Capture difference software quality software impact written resources (blog post, paper, etc.)Capture difference software quality software impact written resources (blog post, paper, etc.)Conduct Delphi study multiple Delphi studies across disciplines determine\nconsensus key indicators software impact related questions, : improving\nquality software improve impact?Conduct Delphi study multiple Delphi studies across disciplines determine\nconsensus key indicators software impact related questions, : improving\nquality software improve impact?Perform randomized experiments software impact treatment improved software practicesPerform randomized experiments software impact treatment improved software practicesPerform retrospective study software quality related “impact” software.Perform retrospective study software quality related “impact” software.","code":""},{"path":"Ch-Policy.html","id":"recognize-the-value-and-importance-of-software-policy-research-activities-aim-5","chapter":"7 Policy","heading":"7.2.3.9.4 Recognize the value and importance of software policy research activities (Aim 5)","text":"Study whether higher-quality software produces higher-impact science reliable science results","code":""},{"path":"Ch-Policy.html","id":"funding-opportunities-for-software-maintenance-policy-advocacy-activities-aim-6","chapter":"7 Policy","heading":"7.2.3.9.5 Funding opportunities for software maintenance policy advocacy activities (Aim 6)","text":"Provide system match open source maintenance needs open source programmers\n(e.g., classified ads), funded URSSI, URSSI support proposals \nmaintenance work (morally providing guidance proposer)Provide system match open source maintenance needs open source programmers\n(e.g., classified ads), funded URSSI, URSSI support proposals \nmaintenance work (morally providing guidance proposer)Provide fellowships programmers “good stuff” related maintenanceProvide fellowships programmers “good stuff” related maintenanceAttach money maintenance --created awards good software\ndevelopment, jointly named funded communitiesAttach money maintenance --created awards good software\ndevelopment, jointly named funded communities","code":""},{"path":"Ch-Policy.html","id":"general-advocacy-activities-not-mapped-to-specific-aims-1","chapter":"7 Policy","heading":"7.2.3.9.6 General advocacy activities (not mapped to specific Aims)","text":"Talk problems current software licenses/models suggest alternativesTalk problems current software licenses/models suggest alternativesCreate peer-review publishing systems software appropriate, just version \narticle appropriate system. instance, find software ecosystem-native way peer-review software\ninside code management system, “publish” software giving specific version code DOICreate peer-review publishing systems software appropriate, just version \narticle appropriate system. instance, find software ecosystem-native way peer-review software\ninside code management system, “publish” software giving specific version code DOI","code":""},{"path":"Ch-Policy.html","id":"work-between-policy-and-other-urssi-areas","chapter":"7 Policy","heading":"7.3 Work between Policy and other URSSI Areas","text":"Education & Training – use learn problems, use training events disseminate products advocacyEducation & Training – use learn problems, use training events disseminate products advocacyCommunity – provide topics fellows, work newsletter dissemination, host champions,\ncontribute disseminate best practicesCommunity – provide topics fellows, work newsletter dissemination, host champions,\ncontribute disseminate best practicesIncubator – develop general specific guidance projectsIncubator – develop general specific guidance projects","code":""},{"path":"Ch-Policy.html","id":"policy-metricsmilestones","chapter":"7 Policy","heading":"7.4 Policy metrics/milestones","text":"Amount funding provided US public private funding agencies research software\ndevelopment maintenanceAmount funding provided US public private funding agencies research software\ndevelopment maintenanceNumber fraction US universities RSE-like positions, number positions universityNumber fraction US universities RSE-like positions, number positions universityNumber fraction US university faculty successfully use software work important part \ntenure packagesNumber fraction US university faculty successfully use software work important part \ntenure packagesNumber participants policy events, satisfaction based exit surveysNumber participants policy events, satisfaction based exit surveysCollect “thank yous” anecdotes URSSI recognized helping somethingCollect “thank yous” anecdotes URSSI recognized helping somethingNumber requests universities talks URSSI staffNumber requests universities talks URSSI staffNumber talks others URSSI discussedNumber talks others URSSI discussedNumber views citations URSSI policy documents web sitesNumber views citations URSSI policy documents web sitesTODO: neededTODO: neededImpacts:table maps URSSI activities chapter three portions URSSI’s intended impact.\n(complete table impacts URSSI activities can found Chapter 10 (Metrics Evaluation).)\nimpact cells, X indicates designed primary impact activity, y indicates\ndesigned secondary impact.\nTable 7.1: Impact table\n","code":""},{"path":"Ch-Org.html","id":"Ch-Org","chapter":"8 Management & Coordination Area","heading":"8 Management & Coordination Area","text":"Management & Coordination Area URSSI designed manage project (assign monitor work,\nusually work packages; monitor, mitigate, respond risks; provide reports; adapt work \ncommunity feedback; ensure project sustainability) foster collaboration four\nareas URSSI: Policy, Education & Training, Incubator, Outreach & Community.","code":""},{"path":"Ch-Org.html","id":"management-resources","chapter":"8 Management & Coordination Area","heading":"8.1 Management resources","text":"PI Co-PIs funded 0.25 FTE supported staff home institutions \nwriting reports budgeting, etc. Work Package Leader roles filled PIs /senior\npersonnel funded around 0.1 FTE leading work package. Sustainability Officer,\nDiversity Officer Evaluator planned 0.1 - 0.25 FTE depending phase \ninstitute. initial phases ramping institute, defining work packages (see definition )\nservices, well detailed project plans 1-year 5-year goals require effort\nbeginning, revisit level effort 18 months 48 months.\naddition continuous monitoring progress risks potential refactoring work \naddressing risks, work sustainability, evaluation diversity, major topics.","code":""},{"path":"Ch-Org.html","id":"work-packages","chapter":"8 Management & Coordination Area","heading":"8.2 Work packages","text":"work done URSSI (including management coordination) structured \nwork packages (WPs), organized around project’s goals areas, additional\nWP concerned quality risk management, project coordination, sustainability, \nreporting activities. WP defines discrete unit work period, can part \none areas. duration WP can fixed period (e.g., six months organize \nrun single training event) can span full lifetime project, case\nmaintenance website regular distribution newsletters. example, WP \nsupport new open-source project might last year span three areas: education & training,\nincubator, outreach & community.Fig. Areas WPs: WP can exist one areas. WP “Project coordination, risk management\nreporting” spans four areas lasts duration project. WPx, example, \npart Education & Training, Incubator, Outreach & Community. WPy, WPz, WPw exist \nsingle area.","code":""},{"path":"Ch-Org.html","id":"management-structure-and-procedures","chapter":"8 Management & Coordination Area","heading":"8.3 Management structure and procedures","text":"Management URSSI includes activities occur different levels, appropriate size \nstructure institute. section presents project’s organizational decision-making\nmechanisms, well process ensuring effective information interchange \nindividual work packages. Central project’s management key set roles committees,\ndescribed detail : PI, Co-PIs, Work Package Leaders, sustainability\nofficer, evaluator, Steering Committee. Work Package leaders may Co-PIs URSSI staff.PI Co-PIs overall responsibility project activities work \nevaluator make periodic revisions ensure project’s continuing success.PI manage\nadministrative financial aspects project, assistance one two staff\nmembers. PI also oversee day--day management project, support \nCo-PIs. PI Co-PIs responsible reviewing overall progress project. \nwork closely Work Package Leaders manage technical work project.\nWork Package Leaders responsible progress individual work packages, \ntimely production quality deliverables, achievement milestones.\nSustainability Officer work towards ensuring sustainability overall institute.\nDiversity Officer ensure URSSI meets internal external diversity goals, \nsuggest additional activities needed.\nEvaluator ensure URSSI activities progress towards overall goals URSSI measured ,\nsuggest corrective actions needed.\nSteering Committee advise support PI Co-PIs. Senior Personnel \nresponsible tasks assigned Work Package leaders. Tasks include administrative tasks project.structure developed :Ensure effective management project;Ensure clearly defined communication channels internal external project;Establish clear procedures making decisions resolving conflicts;Ensure project proceeds within framework budget, including efficient reallocation budget necessary according administrative, financial, legal principles defined NSF; andEnsure participants meet obligations project.","code":""},{"path":"Ch-Org.html","id":"project-management-team","chapter":"8 Management & Coordination Area","heading":"8.4 Project Management Team","text":"project management team comprisesLeadership Team (PI Co-PIs)Work Package LeadersSustainability OfficerDiversity OfficerEvaluatorSenior PersonnelIn addition team, project rely Steering Committee.Project Management Team meet annual basis, starting initial meeting \nfirst month project promote effective efficient work among participants. \nmeeting include whole project management team along invited experts. PI can call\nadditional meetings time. annual meetings face--face possible. Additional\nmeetings may via telephone conference, video conference, . addition core project\nteam, PI can invite person knowledgeable area concern within URSSI scope \nattend Project Management Team meetings advisory capacity.Project Management Team contribute strategic orientation project represents\ninterests participants. main tasks :Collect feedback potential user researcher communities developer communities;Disseminate project’s latest results via publications presentations conferences workshops; andAccomplish work packages.","code":""},{"path":"Ch-Org.html","id":"steering-committee","chapter":"8 Management & Coordination Area","heading":"8.4.1 Steering Committee","text":"Steering Committee formed start project. consist 6-8 experts invited\nLeadership Team, drawn diverse areas including sustainability, software engineering, \ndomain researchers. Steering Committee members asked serve two-year terms, though initial\nterms may longer shorter set staggered terms committee. Members can continue \nadditional terms member project (PI Co-PIs) agree.Steering Committee ultimate advisory group running project. role toGive guidance PI, Co-PIs Work Package Leaders;Exchange experiences formulate ideas interoperation SI2/CSSI projects\n(e.g. MolSSI, IRIS-HEP) sustainability;Advise scientific decisions.Steering Committee invited every Project Management Team meeting.","code":""},{"path":"Ch-Org.html","id":"pi","chapter":"8 Management & Coordination Area","heading":"8.4.2 PI","text":"PI coordinate project :Address recommendations submitted Steering Committee Project Management Team, taking appropriate actions;Address ethical, legal diversity issues relevant project;Approve project budgets;Ensure project proceeds according administrative, financial, legal principles defined NSF;Participate annual NSF PI meetings; andReport NSF.","code":""},{"path":"Ch-Org.html","id":"leadership-team-pi-and-co-pis","chapter":"8 Management & Coordination Area","heading":"8.4.3 Leadership Team (PI and Co-PIs)","text":"PI Co-PIs form Leadership Team: decision-making body project. :Set strategic direction project;Ensure effective operation project ensure efforts focused towards achieving objectives;Define work packages assign work package leaders;Invite Steering Committee members;Address risks may impair progress towards project’s objectives propose strategies address risks;Direct project according work plan taking corrective actions needed;Ensure free flow information Work Package Leaders ensure cooperation liaison \nindividual work packages takes place;Ensure work packages interact effectively;Ensure deliverables good quality time;Assemble progress reports deliverables;Monitor progress work packages towards milestones deliverables.","code":""},{"path":"Ch-Org.html","id":"work-package-leaders","chapter":"8 Management & Coordination Area","heading":"8.4.4 Work Package Leaders","text":"work package leader responsible effective planning, execution, reporting individual work package.\nresponsible :Coordinating communication work partners within work package;Understanding work package constraints coordination issues, especially work package falls several areas;Ensuring progress towards work package milestones deliverables;Ensuring work package reports deliverables produced timely fashion;Ensuring results outputs disseminated effectively work packages;Ensuring good communication work packages;Reporting progress work package PI Co-PIs;Providing support PI;Setting regular meetings (weekly bi-weekly) participants within work package\nvia telephone conference, video conference .","code":""},{"path":"Ch-Org.html","id":"sustainability-officer","chapter":"8 Management & Coordination Area","heading":"8.4.5 Sustainability Officer","text":"sustainability officer ensures actions work packages analyzed regarding \ncontribution sustainability institute. Work packages might effective beginning\ninstitute might phase time need redefined different metrics, \nexample. sustainability officer can suggest lead work packages building additional\ncollaborations analyzing /applying additional funding streams. collaborate\nclosely incubator area use methods spinning work packages self-sustainable\nbeyond duration funding project. sustainability officer planned part \nadvisory board, Co-PI, involved day--day management area work packages.\ngoal role maintains provides high-level external perspective impact measures sustainability.","code":""},{"path":"Ch-Org.html","id":"diversity-officer","chapter":"8 Management & Coordination Area","heading":"8.4.6 Diversity Officer","text":"diversity officer ensures actions work packages analyzed regarding \ncontribution diversity institute overall community. diversity officer \nalso ombudsperson diversity-related issues arise, individuals inside outside\nproject want privately point problems make suggestions. diversity officer also\nhelp building partnerships communities enable project increase diversity.","code":""},{"path":"Ch-Org.html","id":"evaluator","chapter":"8 Management & Coordination Area","heading":"8.4.7 Evaluator","text":"evaluator responsible assessing performance project, including defining appropriate\nmetrics, suggesting appropriate measures performance found lacking goals project\nmet.","code":""},{"path":"Ch-Org.html","id":"risk-management","chapter":"8 Management & Coordination Area","heading":"8.5 Risk management","text":"leadership team well steering committee well experienced project risk management.\nleadership team maintain risk register refreshed least annually, address\nrisks may impair progress towards project’s objectives proposing strategies address \nrisks directing project according work plan, taking corrective actions needed. \nproject plan designed accommodate appropriate proven risk management practices.risks common type project size complexity, including coordination risks,\nproblems tasks delivering, loss project team member low impact community building \ncommunity growth. risks specific institute plan, little interaction \nexisting institutes complementing ’s activities.","code":""},{"path":"Ch-Org.html","id":"management-metricsmilestones","chapter":"8 Management & Coordination Area","heading":"8.6 Management metrics/milestones","text":"Management & Coordination Area provides structure efficiently manage URSSI. three main phases building evaluating structure defining tools supporting management process.First phase (1-3 months):Announcing filling open job positions institute, strongly considering diversity soAnnouncing filling open job positions institute, strongly considering diversity soDefining project management framework tools supporting framework, e.g., following concept Traction working Trello BoardsDefining project management framework tools supporting framework, e.g., following concept Traction working Trello BoardsDefining mission, vision culture URSSIDefining mission, vision culture URSSIDefining 1-year, 3-year 5-year goalsDefining 1-year, 3-year 5-year goalsDefining work packages, starting first 18 monthsDefining work packages, starting first 18 monthsSecond phase (4-18 months)Evaluating efficiency management structure, e.g., additional roles/positions needed, fewer positions neededEvaluating efficiency management structure, e.g., additional roles/positions needed, fewer positions neededEvaluating project management frameworkEvaluating project management frameworkEvaluating revisiting active work packagesEvaluating revisiting active work packagesDefining work packages 18 - 60 monthsDefining work packages 18 - 60 monthsDefine sustainability metrics work packagesDefine sustainability metrics work packagesThird phase (18-60 months)Evaluating revisiting work packagesEvaluating revisiting work packagesDistinguishing preparing ramp services can managed sustainably community services sustainably delivered URSSIDistinguishing preparing ramp services can managed sustainably community services sustainably delivered URSSI","code":""},{"path":"Ch-Org.html","id":"swot-strengths-weaknesses-opportunities-threats","chapter":"8 Management & Coordination Area","heading":"8.7 SWOT (Strengths, Weaknesses, Opportunities, Threats)","text":"SWOT analysis helps find best match environmental trends (opportunities threats) internal capabilities.strength resource capacity organization can use effectively achieve objectives.weakness limitation, fault, defect organization keep achieving objectives.opportunity favorable situation organization’s environment. usually trend change kind overlooked need increases demand product service permits firm enhance position supplying .threat unfavorable situation organization’s environment potentially damaging strategy. threat may barrier, constraint, anything external might cause problems, damage injury.SWOT analysis based experiences conceptualization phase URSSI.StrengthsConceptualization URSSI created already awareness community involvementConceptualization URSSI created already awareness community involvementExperience winter schoolExperience winter schoolResults survey ethnographic studiesResults survey ethnographic studiesWeaknessesAwareness URSSI large set communitiesOpportunitiesClose collaboration existing NSF sustainability institutes, carpentries, UK SSI, US-RSE, ReSA, BSSw, …Close collaboration existing NSF sustainability institutes, carpentries, UK SSI, US-RSE, ReSA, BSSw, …Yearly surveys research software engineeringYearly surveys research software engineeringThreatsOverlapping effort projects hindering uptake URSSI activitiesOverlapping effort projects hindering uptake URSSI activitiesA plethora target communitiesA plethora target communities","code":""},{"path":"Ch-Budget.html","id":"Ch-Budget","chapter":"9 Budget","heading":"9 Budget","text":"point, without specific opportunity propose , budget documented.\nDifferent sections can supported different levels depending opportunities.","code":""},{"path":"Ch-Metrics.html","id":"Ch-Metrics","chapter":"10 Metrics and Evaluation","heading":"10 Metrics and Evaluation","text":"chapter developed.table maps URSSI activities three portions URSSI’s intended impact. Activities \npreceded letter indicate area URSSI \n(C = community outreach,\nE = education training,\n= incubator,\nP = policy),\nimpact cells, X indicates designed primary impact activity, y indicates\ndesigned secondary impact.\nTable 10.1: Impact table\n","code":""},{"path":"Ch-Summary.html","id":"Ch-Summary","chapter":"11 Final Words","heading":"11 Final Words","text":"Research software continues play important role enabling much modern research. Without access high quality research software, impossible address many pressing challenges face, emerging infectious diseases, food security, wildfires, climate change, among others. numerous interactions US research community, identified several key challenges solutions improve sustainability research software develop maintain . plan describes cohesive set interrelated activities coordinated run URSSI.goal improve quality, usefulness, sustainability research software improving practices, increasing diversity practitioners. grow sustain thriving community around research software, propose institute coordinate efforts around training education, community development, software development practices, advocating people engaged research software. four areas activities designed impact people, software, broader research software ecosystem. include impacts :People: Helping researchers develop software skills, connecting peers, sharing best practices, preparing workforce within beyond academia, getting recognition research software work scholarship.Software: Incubating promising research software tools helping become sustainable, identifying challenges developing resources address , disseminating best practices software developmentResearch Software ecosystem: Incentivizing contribution public infrastructure, recognizing valuing software academia, national labs, industry, increasing diversity research software practitioners United States.open science movement (Tennant et al. 2020), seen growing support among early career researchers past decade, surfaced many challenges facing research software. Among numerous motivations greater openness, reproducibility, reusability increased transparency rank high. early days movement focused open free access research publications, research data recent focus scholarly community. addition numerous data repositories, tools, training resources, community came together 2013 launch Research Data Alliance, community consortium whose mission improve cultural technical practices greater sharing open data.Research software needs coordinated effort similar scale one led Research Software Alliance (https://www.researchsoft.org/). Many activities proposed plan entirely novel. However, never carried coordinated manner intention develop grow community researchers shared interest around research software. thriving community also critical address challenge facing academia, national labs industry, lack diversity. URSSI platform provide opportunities many communities little representation space.handful activities describe plan can funded executed independently, anything short coordinated effort impact desire scales describe. activities interrelated support . Therefore likely substantially larger impact coordinated fashion separate activities. institute like URSSI can also serve focal point coordinate many existing disparate efforts help succeed reaching wider audience. Addressing long standing systemic challenges requires coordinated investment.","code":""},{"path":"glossary.html","id":"glossary","chapter":"Glossary","heading":"Glossary","text":"progress","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"Almeida, Daniel ., Gail C. Murphy, Greg Wilson, Mike Hoye. 2017. “Software Developers Understand Open Source Licenses?” 2017 Ieee/Acm 25th International Conference Program Comprehension (Icpc), 1–11. IEEE. https://doi.org/10.1109/ICPC.2017.7.Aversano, Lerina, Daniela Guardabascio, Maria Tortorella. 2017. “Evaluating Quality Documentation Open Source Software.” ENASE, 308–13. https://doi.org/10.5220/0006369403080313.Barone, Lindsay, Jason Williams, David Micklos. 2017. “Unmet Needs Analyzing Biological Big Data: Survey 704 NSF Principal Investigators.” PLoS Computational Biology 13 (10). https://doi.org/10.1371/journal.pcbi.1005755.Bourque, Pierre, R. Fairley. 2004. “Guide Software Engineering Body Knowledge (Swebok Guide).” IEEE Computer Society. http://www.swebok.org.Broman, Karl, Mine Cetinkaya-Rundel, Amy Nussbaum, Christopher Paciorek, Roger Peng, Daniel Turek, Hadley Wickham. 2017. “Recommendations Funding Agencies Supporting Reproducible Research.” American Statistical Association. Vol. 2. https://www.amstat.org/asa/files/pdfs/pol-reproducibleresearchrecommendations.pdf.Carver, Jeffrey C., Sandra Gesing, Daniel S. Katz, Karthik Ram, Nicholas Weber. 2018. “Conceptualization US Research Software Sustainability Institute (URSSI).” Computing Science & Engineering 20 (3): 4–9. https://doi.org/10.1109/MCSE.2018.03221924.Coelho, Jailton, Marco Tulio Valente. 2017. “Modern Open Source Projects Fail.” Proceedings 2017 11th Joint Meeting Foundations Software Engineering, 186–96. https://doi.org/10.1145/3106237.3106246.Collberg, Christian, Todd Proebsting, Gina Moraila, Akash Shankaran, Zuoming Shi, Alex M Warren. 2013. “Measuring Reproducibility Computer Systems Research.” Department Computer Science, University Arizona TR 13-03. https://www.cs.arizona.edu/sites/default/files/TR13-03.pdf.Collberg, Christian, Todd Proebsting, Alex M Warren. 2014. “Repeatability Benefaction Computer Systems Research.” Department Computer Science, University Arizona TR 14-04. http://repeatability.cs.arizona.edu/v2/RepeatabilityTR.pdf.Daniel, Sherae, Ritu Agarwal, Katherine J. Stewart. 2013. “Effects Diversity Global, Distributed Collectives: Study Open Source Project Success.” Information Systems Research 24 (2): 312–33. https://doi.org/10.1287/isre.1120.0435.Eghbal, Nadia. 2016. Roads Bridges: Unseen Labor Behind Digital Infrastructure. Ford Foundation. https://www.fordfoundation.org/work/learning/research-reports/roads--bridges--unseen-labor-behind--digital-infrastructure/.Geiger, R. Stuart, Nelle Varoquaux, Charlotte Mazel-Cabasse, Chris Holdgraf. 2018. “Types, Roles, Practices Documentation Data Analytics Open Source Software Libraries.” Computer Supported Cooperative Work (CSCW) 27 (3-6): 767–802. https://doi.org/10.1007/s10606-018-9333-1.Hettrick, Simon. 2014. “’s Impossible Conduct Research Without Software, Say 7 10 Uk Researchers.” https://www.software.ac.uk/blog/2014-12-04--impossible-conduct-research-without-software-say-7--10-uk-researchers.———. 2016. “Brief History Research Software Engineers UK.” http://bit.ly/RSEHettrick.———. 2018. “softwaresaved/software_in_research_survey_2014: Software research survey.” Zenodo. https://doi.org/10.5281/zenodo.1183562.Hettrick, Simon, Mario Antonioletti, Les Carr, Neil Chue Hong, Stephen Crouch, David De Roure, Iain Emsley, et al. 2014. “UK Research Software Survey 2014.” Zenodo. https://doi.org/10.5281/zenodo.14809.Howison, James. 2015. “Sustaining Scientific Infrastructures: Transitioning Grants Peer Production (Work--Progress).” iConference 2015 Proceedings. http://hdl.handle.net/2142/73439.Howison, James, Julia Bullard. 2016. “Software Scientific Literature: Problems Seeing, Finding, Using Software Mentioned Biology Literature.” Journal Association Information Science Technology 67 (9): 2137–55. https://doi.org/10.1002/asi.23538.Hsu, Chun-Nan, Anita Bandrowski, Thomas H. Gillespie, Jon Udell, Ko-Wei Lin, Ibrahim Burak, Jeffrey S. Grethe, Maryann Martone. 2019. “Comparing Use Research Resource Identifiers Natural Language Processing Citation Databases, Software Digital Artifacts.” Computing Science & Engineering. https://doi.org/10.1109/MCSE.2019.2952838.Huppenkothen, Daniela, Anthony Arendt, David W. Hogg, Karthik Ram, Jacob T. VanderPlas, Ariel Rokem. 2018. “Hack Weeks Model Data Science Education Collaboration.” Proceedings National Academy Sciences 115 (36): 8872–7. https://doi.org/10.1073/pnas.1717196115.Huppenkothen, Daniela, Brian McFee, Laura Norén. 2020. “Entrofy Cohort: Transparent Method Diverse Cohort Selection.” PLOS ONE 15 (7): 1–35. https://doi.org/10.1371/journal.pone.0231939.Hwang, Lorraine, Allison Fish, Laura Soito, MacKenzie Smith, Louise H. Kellogg. 2017. “Software Scientist: Coding Citation Practices Geodynamics.” Earth Space Science 4 (11): 670–80. https://doi.org/10.1002/2016EA000225.Lee, Amanda, Jeffrey C. Carver. 2019. “FLOSS Participants’ Perceptions Gender Inclusiveness: Survey.” IEEE/ACM 41st International Conference Software Engineering (Icse), 677–87. https://doi.org/10.1109/ICSE.2019.00077.Mendez, Eva, Rebecca Lawrence, Catriona J. MacCallum, Eva Moar, Open Science Policy Platform members. 2020. “Progress Open Science: Towards Shared Research Knowledge System: Final Report Open Science Policy Platform.” European Commission. https://doi.org/10.2777/00139.Moher, David, Florian Naudet, Ioana . Cristea, Frank Miedema, John P. . Ioannidis, Steven N. Goodman. 2018. “Assessing Scientists Hiring, Promotion, Tenure.” PLoS Biology 16 (3): e2004089. https://doi.org/10.1371/journal.pbio.2004089.Nafus, Dawn. 2012. “’Patches Don’t Gender’: Open Open Source Software.” New Media & Society 14 (4): 669–83. https://doi.org/10.1177/1461444811422887.Nangia, Udit, Daniel S. Katz. 2017. “Track 1 Paper: Surveying U.s. National Postdoctoral Association Regarding Software Use Training Research.” figshare. https://doi.org/10.6084/m9.figshare.5328442.v3.National Science Foundation. 2017. “Women, Minorities, Persons Disabilities Science Engineering.” https://www.nsf.gov/statistics/2017/nsf17310/.O’Mahony, Siobhán. 2007. “Governance Open Source Initiatives: Mean Community Managed?” Journal Management & Governance 11 (2): 139–50. https://doi.org/10.1007/s10997-007-9024-7.Organisation Economic Cooperation Development. 2019. OECD Skills Outlook 2019. https://doi.org/10.1787/df80bc12-en.Park, Hyoungjoo, Dietmar Wolfram. 2019. “Research Software Citation Data Citation Index: Current Practices Implications Research Software Sharing Reuse.” Journal Informetrics 13 (2): 574–82. https://doi.org/10.1016/j.joi.2019.03.005.Philippe, Olivier, Martin Hammitzsch, Stephan Janosch, Anelda van der Walt, Ben van Werkhoven, Simon Hettrick, Daniel S. Katz, et al. 2019. softwaresaved/international-survey: Public release 2018 results (version 2018-v.1.0.2). Zenodo. https://doi.org/10.5281/zenodo.2585783.Pinto, Gustavo, Igor Wiese, Luiz Felipe Dias. 2018. “Scientists Develop Scientific Software? External Replication.” 25th International Conference Software Analysis, Evolution Reengineering (SANER), 582–91. https://doi.org/10.1109/SANER.2018.8330263.Powell, Whitney E., D. Scott Hunsinger, B. Dawn Medlin. 2010. “Gender Differences Within Open Source Community: Exploratory Study.” Journal Information Technology 21 (4): 29–37. http://jitm.ubalt.edu/XXI-4/article3.pdf.Price-Whelan, . M., B. M. Sipőcz, H. M. Günther, P. L. Lim, S. M. Crawford, S. Conseil, D. L. Shupe, M. W. Craig, N. Dencheva, others. 2018. “Astropy Project: Building Inclusive, Open-Science Project Status V2.0 Core Package.” arXiv Preprint arXiv:1801.02634. https://doi.org/10.3847/1538-3881/aabc4f.Ram, Karthik, Carl Boettiger, Scott Chamberlain, Noam Ross, Maëlle Salmon, Stefanie Butland. 2018. “Community Practice Around Peer Review Long-Term Research Software Sustainability.” Computing Science & Engineering 21 (2): 59–65. https://doi.org/10.1109/MCSE.2018.2882753.Reagle, Joseph. 2012. “‘Free Sexist?’ Free Culture Gender Gap.” First Monday 18 (1). https://doi.org/10.5210/fm.v18i1.4291.Research Data Alliance. 2020. “Final Release: COVID-19 Guidelines.” RDA. https://doi.org/10.15497/RDA00052.Robitaille, Thomas P., Erik J. Tollerud, Perry Greenfield, Michael Droettboom, Erik Bray, Tom Aldcroft, Matt Davis, et al. 2013. “Astropy: Community Python Package Astronomy.” Astronomy & Astrophysics 558: A33. https://doi.org/10.1051/0004-6361/201322068.Rohl, Carol ., Charlie E. M. Strauss, Kira M. S. Misura, David Baker. 2004. “Protein Structure Prediction Using Rosetta.” Methods Enzymology, 383:66–93. Elsevier. https://doi.org/10.1016/S0076-6879(04)83004-0.Salmena, Leonardo, Laura Poliseno, Yvonne Tay, Lev Kats, Pier Paolo Pandolfi. 2011. “ceRNA Hypothesis: Rosetta Stone Hidden RNA Language?” Cell 146 (3): 353–58. https://doi.org/10.1016/j.cell.2011.07.014.Schweik, Charles M, Robert C English. 2012. Internet Success: Study Open-Source Software Commons. MIT Press.Shaikh, Maha, Ola Henfridsson. 2017. “Governing Open Source Software Coordination Processes.” Information Organization 27 (2): 116–35. https://doi.org/10.1016/j.infoandorg.2017.04.001.Siepel, Adam. 2019. “Challenges Funding Developing Genomic Software: Roots Remedies.” Genome Biology 20 (1): 147. https://doi.org/10.1186/s13059-019-1763-7.Software Carpentry. n.d. “History Software Carpentry.” https://software-carpentry.org/scf/history/.Stewart, Katherine. 2016. “Studies Success Open Source Source Software Projects.” Successful OSS Project Design Implementation, 145–62. Routledge. https://doi.org/10.4324/9781315611235.Sufi, Shoaib, Caroline Jay. 2018. “Raising Status Software Research: Survey-Based Evaluation Software Sustainability Institute Fellowship Programme [Version 1; Peer Review: 3 Approved Reservations].” F1000Research 7 (1599). https://doi.org/10.12688/f1000research.16231.1.Tennant, Jonathan, Ritwik Agarwal, Ksenija Baždarić, David Brassard, Tom Crick, Daniel J. Dunleavy, Thomas R. Evans, et al. 2020. “Tale Two ’Opens’: Intersections Free Open Source Software Open Scholarship.” SocArXiv. https://doi.org/10.31235/osf.io/2kxq8.Vasilescu, Bogdan, Andrea Capiluppi, Alexander Serebrenik. 2012. “Gender, Representation Online Participation: Quantitative Study StackOverflow.” 2012 International Conference Social Informatics, 332–38. https://doi.org/10.1109/SocialInformatics.2012.81.Vasilescu, Bogdan, Daryl Posnett, Baishakhi Ray, Mark G. J. van den Brand, Alexander Serebrenik, Premkumar Devanbu, Vladimir Filkov. 2015. “Gender Tenure Diversity GitHub Teams.” 33rd Annual ACM Conference Human Factors Computing Systems, 3789–98. CHI ’15. https://doi.org/10.1145/2702123.2702549.Wilson, Greg. 2016. “Software Carpentry: Lessons Learned [Version 2; Peer Review: 3 Approved].” F1000Research 3 (62). https://doi.org/10.12688/f1000research.3-62.v2.","code":""}]
